sampleFreq[SNPyr==year & SNPcat=='nFs',snp]
sampleFreq[SNPyr==year & SNPcat=='xMi',snp]<-
ifelse(sampleFreq[SNPyr==year & SNPcat=='nMi',snp]==0,0,
sum(genoYr[genoYr$Category=='immigrant'&genoYr$Sex==1,snp],na.rm=TRUE)/
sampleFreq[SNPyr==year & SNPcat=='nMi',snp])
sampleFreq[SNPyr==year & SNPcat=='xFi',snp]<-
ifelse(sampleFreq[SNPyr==year & SNPcat=='nFi',snp]==0,0,
sum(genoYr[genoYr$Category=='immigrant'&genoYr$Sex==2,snp],na.rm=TRUE)/
sampleFreq[SNPyr==year & SNPcat=='nFi',snp])
sampleFreq[SNPyr==year & SNPcat=='xMb',snp]<-
sum(genoYr[genoYr$Category=='nestling'&genoYr$Sex==1,snp],na.rm=TRUE)/
sampleFreq[SNPyr==year & SNPcat=='nMb',snp]
sampleFreq[SNPyr==year & SNPcat=='xFb',snp]<-
sum(genoYr[genoYr$Category=='nestling'&genoYr$Sex==2,snp],na.rm=TRUE)/
sampleFreq[SNPyr==year & SNPcat=='nFb',snp]
}
}
####change in allele frequencies####
#calculate allele freq differences between each category and the year before
for(year in c(1999:2013)){
#allele freq differences
sampleFreq[SNPyr==year & SNPcat=='xt1-xt',c(3:(snp_length+2))]<-
sampleFreq[SNPyr==year & SNPcat=='xt',c(3:(snp_length+2))]-
sampleFreq[SNPyr==(year-1) & SNPcat=='xt',c(3:(snp_length+2))]
sampleFreq[SNPyr==year & SNPcat=='xMs-xt',c(3:(snp_length+2))]<-
sampleFreq[SNPyr==year & SNPcat=='xMs',c(3:(snp_length+2))]-
sampleFreq[SNPyr==(year-1) & SNPcat=='xt',c(3:(snp_length+2))]
sampleFreq[SNPyr==year & SNPcat=='xFs-xt',c(3:(snp_length+2))]<-
sampleFreq[SNPyr==year & SNPcat=='xFs',c(3:(snp_length+2))]-
sampleFreq[SNPyr==(year-1) & SNPcat=='xt',c(3:(snp_length+2))]
sampleFreq[SNPyr==year & SNPcat=='xMi-xt',c(3:(snp_length+2))]<-
sampleFreq[SNPyr==year & SNPcat=='xMi',c(3:(snp_length+2))]-
sampleFreq[SNPyr==(year-1) & SNPcat=='xt',c(3:(snp_length+2))]
sampleFreq[SNPyr==year & SNPcat=='xFi-xt',c(3:(snp_length+2))]<-
sampleFreq[SNPyr==year & SNPcat=='xFi',c(3:(snp_length+2))]-
sampleFreq[SNPyr==(year-1) & SNPcat=='xt',c(3:(snp_length+2))]
sampleFreq[SNPyr==year & SNPcat=='xMb-xt',c(3:(snp_length+2))]<-
sampleFreq[SNPyr==year & SNPcat=='xMb',c(3:(snp_length+2))]-
sampleFreq[SNPyr==(year-1) & SNPcat=='xt',c(3:(snp_length+2))]
sampleFreq[SNPyr==year & SNPcat=='xFb-xt',c(3:(snp_length+2))]<-
sampleFreq[SNPyr==year & SNPcat=='xFb',c(3:(snp_length+2))]-
sampleFreq[SNPyr==(year-1) & SNPcat=='xt',c(3:(snp_length+2))]
}
#calculate variances and covariances
sampleVar<-data.frame(Year=rep(c(1999:2013),each=28),Category=rep(c(
'xt1-xt',
'xMs-xt','xFs-xt',
'xMi-xt','xFi-xt',
'xMb-xt','xFb-xt',
'xMsxMi','xFsxFi','xMsxMb','xFsxFb','xMixMb','xFixFb',
'xMsxFs','xMixFi','xMbxFb',
'xMsxFi','xMsxFb','xMixFb',
'xFsxMi','xFsxMb','xFixMb',
'xMfam','xFfam','xMmend','xFmend','xMfam-xt','xFfam-xt'),15),stringsAsFactors=FALSE)
varYr<-sampleVar$Year
varCat<-sampleVar$Category
for(year in c(1999:2013)){
#var
sampleVar[varYr==year & varCat=='xt1-xt','avg']<-
mean(as.numeric(sampleFreq[SNPyr==year & SNPcat=='xt1-xt',c(3:(snp_length+2))])^2)
sampleVar[varYr==year & varCat=='xMs-xt','avg']<-
mean(as.numeric(sampleFreq[SNPyr==year & SNPcat=='xMs-xt',c(3:(snp_length+2))])^2)
sampleVar[varYr==year & varCat=='xFs-xt','avg']<-
mean(as.numeric(sampleFreq[SNPyr==year & SNPcat=='xFs-xt',c(3:(snp_length+2))])^2)
sampleVar[varYr==year & varCat=='xMi-xt','avg']<-
mean(as.numeric(sampleFreq[SNPyr==year & SNPcat=='xMi-xt',c(3:(snp_length+2))])^2)
sampleVar[varYr==year & varCat=='xFi-xt','avg']<-
mean(as.numeric(sampleFreq[SNPyr==year & SNPcat=='xFi-xt',c(3:(snp_length+2))])^2)
sampleVar[varYr==year & varCat=='xMb-xt','avg']<-
mean(as.numeric(sampleFreq[SNPyr==year & SNPcat=='xMb-xt',c(3:(snp_length+2))])^2)
sampleVar[varYr==year & varCat=='xFb-xt','avg']<-
mean(as.numeric(sampleFreq[SNPyr==year & SNPcat=='xFb-xt',c(3:(snp_length+2))])^2)
#covar
sampleVar[varYr==year & varCat=='xMsxMi','avg']<-
mean(as.numeric(sampleFreq[SNPyr==year & SNPcat=='xMs-xt',c(3:(snp_length+2))])*
as.numeric(sampleFreq[SNPyr==year & SNPcat=='xMi-xt',c(3:(snp_length+2))]))
sampleVar[varYr==year & varCat=='xFsxFi','avg']<-
mean(as.numeric(sampleFreq[SNPyr==year & SNPcat=='xFs-xt',c(3:(snp_length+2))])*
as.numeric(sampleFreq[SNPyr==year & SNPcat=='xFi-xt',c(3:(snp_length+2))]))
sampleVar[varYr==year & varCat=='xMsxMb','avg']<-
mean(as.numeric(sampleFreq[SNPyr==year & SNPcat=='xMs-xt',c(3:(snp_length+2))])*
as.numeric(sampleFreq[SNPyr==year & SNPcat=='xMb-xt',c(3:(snp_length+2))]))
sampleVar[varYr==year & varCat=='xFsxFb','avg']<-
mean(as.numeric(sampleFreq[SNPyr==year & SNPcat=='xFs-xt',c(3:(snp_length+2))])*
as.numeric(sampleFreq[SNPyr==year & SNPcat=='xFb-xt',c(3:(snp_length+2))]))
sampleVar[varYr==year & varCat=='xMixMb','avg']<-
mean(as.numeric(sampleFreq[SNPyr==year & SNPcat=='xMi-xt',c(3:(snp_length+2))])*
as.numeric(sampleFreq[SNPyr==year & SNPcat=='xMb-xt',c(3:(snp_length+2))]))
sampleVar[varYr==year & varCat=='xFixFb','avg']<-
mean(as.numeric(sampleFreq[SNPyr==year & SNPcat=='xFi-xt',c(3:(snp_length+2))])*
as.numeric(sampleFreq[SNPyr==year & SNPcat=='xFb-xt',c(3:(snp_length+2))]))
sampleVar[varYr==year & varCat=='xMsxFs','avg']<-
mean(as.numeric(sampleFreq[SNPyr==year & SNPcat=='xMs-xt',c(3:(snp_length+2))])*
as.numeric(sampleFreq[SNPyr==year & SNPcat=='xFs-xt',c(3:(snp_length+2))]))
sampleVar[varYr==year & varCat=='xMixFi','avg']<-
mean(as.numeric(sampleFreq[SNPyr==year & SNPcat=='xMi-xt',c(3:(snp_length+2))])*
as.numeric(sampleFreq[SNPyr==year & SNPcat=='xFi-xt',c(3:(snp_length+2))]))
sampleVar[varYr==year & varCat=='xMbxFb','avg']<-
mean(as.numeric(sampleFreq[SNPyr==year & SNPcat=='xMb-xt',c(3:(snp_length+2))])*
as.numeric(sampleFreq[SNPyr==year & SNPcat=='xFb-xt',c(3:(snp_length+2))]))
sampleVar[varYr==year & varCat=='xMsxFi','avg']<-
mean(as.numeric(sampleFreq[SNPyr==year & SNPcat=='xMs-xt',c(3:(snp_length+2))])*
as.numeric(sampleFreq[SNPyr==year & SNPcat=='xFi-xt',c(3:(snp_length+2))]))
sampleVar[varYr==year & varCat=='xMsxFb','avg']<-
mean(as.numeric(sampleFreq[SNPyr==year & SNPcat=='xMs-xt',c(3:(snp_length+2))])*
as.numeric(sampleFreq[SNPyr==year & SNPcat=='xFb-xt',c(3:(snp_length+2))]))
sampleVar[varYr==year & varCat=='xMixFb','avg']<-
mean(as.numeric(sampleFreq[SNPyr==year & SNPcat=='xMi-xt',c(3:(snp_length+2))])*
as.numeric(sampleFreq[SNPyr==year & SNPcat=='xFb-xt',c(3:(snp_length+2))]))
sampleVar[varYr==year & varCat=='xFsxMi','avg']<-
mean(as.numeric(sampleFreq[SNPyr==year & SNPcat=='xFs-xt',c(3:(snp_length+2))])*
as.numeric(sampleFreq[SNPyr==year & SNPcat=='xMi-xt',c(3:(snp_length+2))]))
sampleVar[varYr==year & varCat=='xFsxMb','avg']<-
mean(as.numeric(sampleFreq[SNPyr==year & SNPcat=='xFs-xt',c(3:(snp_length+2))])*
as.numeric(sampleFreq[SNPyr==year & SNPcat=='xMb-xt',c(3:(snp_length+2))]))
sampleVar[varYr==year & varCat=='xFixMb','avg']<-
mean(as.numeric(sampleFreq[SNPyr==year & SNPcat=='xFi-xt',c(3:(snp_length+2))])*
as.numeric(sampleFreq[SNPyr==year & SNPcat=='xMb-xt',c(3:(snp_length+2))]))
}
####Mendelian noise####
#get unique individuals
genoUnique<-indivlistgeno[!duplicated(indivlistgeno$Indiv),]
#names(genoUnique)[2] <- "USFWS"
#year=1999
#get sample allele frequencies of parents
for(year in c(1999:2013)){
dadsofmales<-indivlistgeno[indivlistgeno$Year==year & indivlistgeno$Category=='nestling' & indivlistgeno$Sex==1,'Dad']
dadsofmalesgeno<-genoUnique[,c(2,8:(snp_length+7))] %>% filter(Indiv %in% dadsofmales)
momsofmales<-indivlistgeno[indivlistgeno$Year==year & indivlistgeno$Category=='nestling' & indivlistgeno$Sex==1,'Mom']
momsofmalesgeno<-genoUnique[,c(2,8:(snp_length+7))] %>% filter(Indiv %in% momsofmales)
dadsoffemales<-indivlistgeno[indivlistgeno$Year==year & indivlistgeno$Category=='nestling' & indivlistgeno$Sex==2,'Dad']
dadsoffemalesgeno<-genoUnique[,c(2,8:(snp_length+7))] %>% filter(Indiv %in% dadsoffemales)
#Moms don't contribute to daughters on Z so skip these
#momsoffemales<-indivlist[indivlist$Year==year & indivlist$Category=='nestling' & indivlist$Sex==2,'Mom']
#momsoffemales<-data.frame(USFWS=momsoffemales[!is.na(momsoffemales)],stringsAsFactors=FALSE)
#momsoffemalesgeno<-merge(momsoffemales,genoUnique[,c(1,8:256)],by='USFWS',all.x=TRUE)
for(snp in names(indivlistgeno)[8:(snp_length+7)]){
sampleFreq[SNPyr==year & SNPcat=='xMdad',snp]<-mean(unlist(dadsofmalesgeno[,snp]),na.rm=TRUE)/2
sampleFreq[SNPyr==year & SNPcat=='xMmom',snp]<-mean(unlist(momsofmalesgeno[,snp]),na.rm=TRUE)
sampleFreq[SNPyr==year & SNPcat=='xFdad',snp]<-mean(unlist(dadsoffemalesgeno[,snp]),na.rm=TRUE)/2
#sampleFreq[SNPyr==year & SNPcat=='xFmom',snp]<-mean(momsoffemalesgeno[,snp],na.rm=TRUE)/2
}
}
#calculate other terms
for(year in c(1999:2013)){
sampleFreq[SNPyr==year & SNPcat=='xMfam',c(3:(snp_length+2))]<-0.5*
(sampleFreq[SNPyr==year & SNPcat=='xMdad',c(3:(snp_length+2))]+
sampleFreq[SNPyr==year & SNPcat=='xMmom',c(3:(snp_length+2))])
sampleFreq[SNPyr==year & SNPcat=='xFfam',c(3:(snp_length+2))]<-
sampleFreq[SNPyr==year & SNPcat=='xFdad',c(3:(snp_length+2))]
sampleFreq[SNPyr==year & SNPcat=='xMmend',c(3:(snp_length+2))]<-
sampleFreq[SNPyr==year & SNPcat=='xMb',c(3:(snp_length+2))]-
sampleFreq[SNPyr==year & SNPcat=='xMfam',c(3:(snp_length+2))]
sampleFreq[SNPyr==year & SNPcat=='xFmend',c(3:(snp_length+2))]<-
sampleFreq[SNPyr==year & SNPcat=='xFb',c(3:(snp_length+2))]-
sampleFreq[SNPyr==year & SNPcat=='xFfam',c(3:(snp_length+2))]
sampleFreq[SNPyr==year & SNPcat=='xMfam-xt',c(3:(snp_length+2))]<-
sampleFreq[SNPyr==year & SNPcat=='xMfam',c(3:(snp_length+2))]-
sampleFreq[SNPyr==(year-1) & SNPcat=='xt',c(3:(snp_length+2))]
sampleFreq[SNPyr==year & SNPcat=='xFfam-xt',c(3:(snp_length+2))]<-
sampleFreq[SNPyr==year & SNPcat=='xFfam',c(3:(snp_length+2))]-
sampleFreq[SNPyr==(year-1) & SNPcat=='xt',c(3:(snp_length+2))]
}
#calculate variances and covariances
for(year in c(1999:2013)){
sampleVar[varYr==year & varCat=='xMfam',3]<-
mean(as.numeric(sampleFreq[SNPyr==year & SNPcat=='xMfam',c(3:(snp_length+2))])^2)
sampleVar[varYr==year & varCat=='xFfam',3]<-
mean(as.numeric(sampleFreq[SNPyr==year & SNPcat=='xFfam',c(3:(snp_length+2))])^2)
sampleVar[varYr==year & varCat=='xMmend',3]<-
mean(as.numeric(sampleFreq[SNPyr==year & SNPcat=='xMmend',c(3:(snp_length+2))])^2)
sampleVar[varYr==year & varCat=='xFmend',3]<-
mean(as.numeric(sampleFreq[SNPyr==year & SNPcat=='xFmend',c(3:(snp_length+2))])^2)
sampleVar[varYr==year & varCat=='xMfam-xt',3]<-
mean(as.numeric(sampleFreq[SNPyr==year & SNPcat=='xMfam-xt',c(3:(snp_length+2))])^2)
sampleVar[varYr==year & varCat=='xFfam-xt',3]<-
mean(as.numeric(sampleFreq[SNPyr==year & SNPcat=='xFfam-xt',c(3:(snp_length+2))])^2)
}
#save output
#save(sampleVar,file=paste("working_files/intermediate_files/sampleVar_Z.ldprune.rdata",sep=''))
save(sampleVar,file=paste("working_files/intermediate_files/sampleVar_Z.220422.rdata",sep=''))
sampleVar
library(foreach)
#library(doParallel)
library(plyr)
library(tidyverse) #v.1.3.1
####set variables and make/import tables####
#number of SNPs to simulate
nloci<-1000 #00
#get input files: fixed list of indiv in each Category each year
load(file='working_files/intermediate_files/indivlistgenoZ.rdata')
#ldprune.SNP <- read.table('ldprune.Z.SNP.list', header = FALSE, sep = "", dec = ".")
#ldprune.cols <- c(names(indivlistgeno_Z)[c(1:8)],ldprune.SNP$V1)
#indivlistgeno <- indivlistgeno_Z[,ldprune.cols]
indivlistgeno <- indivlistgenoZ
names(indivlistgeno)[c(1:7)] <- c( "Year","Indiv", "Category", "Genotyped", "Mom", "Dad", "Sex")
indivlistgeno$Indiv<-as.character(indivlistgeno$Indiv)
indivlistgeno$Dad<-as.character(indivlistgeno$Dad)
indivlistgeno$Mom<-as.character(indivlistgeno$Mom)
####simulate starting genotypes####
#get real frequency of each allele in 1990 (accounting for different total # of alleles in males & females)
datafreq1990<-plyr::laply(names(indivlistgeno)[9:length(indivlistgeno)],function(x)
sum(indivlistgeno[indivlistgeno$Year==1990,x],na.rm=TRUE)/
((2*sum(!is.na(indivlistgeno[indivlistgeno$Year==1990&indivlistgeno$Sex==1,x])))
+(sum(!is.na(indivlistgeno[indivlistgeno$Year==1990&indivlistgeno$Sex==2,x])))))
#randomly sample from real allele frequencies
simfreq<-sample(datafreq1990,nloci,replace=TRUE)
#sort indivlist
indivlist <- indivlistgeno[order(indivlistgeno$Year),c(1:6,8)]
colnames(indivlist) <- c( "Year","Indiv", "Category", "Genotyped", "Mom", "Dad", "Sex")
simindivgeno<-indivlist[!duplicated(indivlist$Indiv),]
simindivgeno$Mom[simindivgeno$Mom == 0] <- NA
simindivgeno$Dad[simindivgeno$Dad == 0] <- NA
#separate into moms vs dads vs nestlings
simindivgenoMoms<-
simindivgeno[(simindivgeno$Category!='nestling' | is.na(simindivgeno$Mom)) & simindivgeno$Sex==2,]
simindivgenoDads<-
simindivgeno[(simindivgeno$Category!='nestling' | is.na(simindivgeno$Mom)) & simindivgeno$Sex==1,]
simindivgenoNestlings<-
simindivgeno[simindivgeno$Category=='nestling' & !is.na(simindivgeno$Mom),]
#simulate genotypes for adults
#moms - 0 1
num.moms<-nrow(simindivgenoMoms)
mom.genos<-sapply(1:nloci,function(loc){
freq<-simfreq[loc]
HWE<-c(1-freq,freq)
loc.genos<-sample(0:1,size=num.moms,prob=HWE,replace=TRUE)
loc.genos
})
#dads - 0 1 2
num.dads<-nrow(simindivgenoDads)
dad.genos<-sapply(1:nloci,function(loc){
freq<-simfreq[loc]
HWE<-c((1-freq)^2,2*freq*(1-freq),freq^2)
loc.genos<-sample(0:2,size=num.dads,prob=HWE,replace=TRUE)
loc.genos
})
#combine simulated mom genotypes with real mom IDs & info
simindivgenoMoms<-cbind(simindivgenoMoms,mom.genos)
#combine simulated dad genotypes with real dad IDs & info
simindivgenoDads<-cbind(simindivgenoDads,dad.genos)
#put the moms and dads back together in one table
simindivgenoParents <- rbind(simindivgenoMoms, simindivgenoDads)
#combine it back with a big table that has space for every individual
simindivgenoAll<-cbind(simindivgeno,simindivgenoParents[match(simindivgeno$Indiv,
simindivgenoParents$Indiv),8:(nloci+7)])
#add rownames
rownames(simindivgenoAll)<-simindivgenoAll$Indiv
####simulate genotypes for nestlings via Mendelian transmission of alleles from parents####
#get years
nest.years<-unique(simindivgenoNestlings$Year)
#for fathers, will need to sample their gametes to get kid genotypes
make.male.gametes<-function(g){
gametes<-rep(NA,length(g))
gametes[g==0]<-0
gametes[g==2]<-1
hets <- g==1 & !is.na(g)
gametes[hets]<-sample(c(0,1),sum(hets),prob=c(0.5,0.5),replace=TRUE)
gametes
}
#get kid genotypes, one year at a time
for(year in nest.years){
#pull out nestlings for this year & get a list of the parents of this year's  nestlings
these.male.nestlings    <- simindivgenoNestlings$Indiv[simindivgenoNestlings$Year==year & simindivgenoNestlings$Sex==1]
these.moms.of.sons      <- unique(simindivgenoNestlings$Mom[simindivgenoNestlings$Year==year & simindivgenoNestlings$Sex==1])
these.dads.of.sons      <- unique(simindivgenoNestlings$Dad[simindivgenoNestlings$Year==year & simindivgenoNestlings$Sex==1])
these.female.nestlings  <- simindivgenoNestlings$Indiv[simindivgenoNestlings$Year==year & simindivgenoNestlings$Sex==2]
these.dads.of.daughters <- unique(simindivgenoNestlings$Dad[simindivgenoNestlings$Year==year & simindivgenoNestlings$Sex==2])
#check that the nestlings don't have genotypes yet (should be NA)
stopifnot(all(is.na( simindivgenoAll %>% filter(Indiv %in% these.female.nestlings) %>% dplyr::select(c(8:(nloci+7))) )))
stopifnot(all(is.na (simindivgenoAll %>% filter(Indiv %in% these.male.nestlings)   %>% dplyr::select(c(8:(nloci+7))) )))
#get parents' genotypes
#moms.of.daughters.geno<-simindivgenoAll[these.moms.of.daughters,]
moms.of.sons.geno      <- simindivgenoAll %>% filter(Indiv %in% these.moms.of.sons)
dads.of.daughters.geno <- simindivgenoAll %>% filter(Indiv %in% these.dads.of.daughters)
dads.of.sons.geno      <- simindivgenoAll %>% filter(Indiv %in% these.dads.of.sons)
#check that all parents are genotyped (NOT NA)
stopifnot(all(!is.na( moms.of.sons.geno       %>% dplyr::select(c(8:(nloci+7))) )))
stopifnot(all(!is.na( dads.of.daughters.geno  %>% dplyr::select(c(8:(nloci+7))) )))
stopifnot(all(!is.na( dads.of.sons.geno       %>% dplyr::select(c(8:(nloci+7))) )))
#run the gamete selector function to pick which gamete dads give their kids
Dads.of.daughters.gamete <- cbind.data.frame("Dad"=these.dads.of.daughters,apply(dads.of.daughters.geno %>% dplyr::select(c(8:(nloci+7))),2,make.male.gametes))
daughters.gamete <- suppressMessages(simindivgenoNestlings %>% filter(Year==year & Sex==2) %>% left_join(Dads.of.daughters.gamete) %>% dplyr::select(c(8:(nloci+7))))
#sep for mom and dad of son then add back together
Dads.of.sons.gamete <- cbind.data.frame("Dad"=these.dads.of.sons,apply(dads.of.sons.geno %>% dplyr::select(c(8:(nloci+7))),2,make.male.gametes))
Dads.of.sons.gamete <- suppressMessages(simindivgenoNestlings %>% filter(Year==year & Sex==1) %>% left_join(Dads.of.sons.gamete) %>% dplyr::select(c(8:(nloci+7))))
Moms.of.sons.gamete      <- moms.of.sons.geno  %>% dplyr::select(c(2,8:(nloci+7)))
Moms.of.sons.gamete <-suppressMessages( simindivgenoNestlings %>% filter(Year==year & Sex==1) %>% left_join(Moms.of.sons.gamete,by=c("Mom"="Indiv")) %>% dplyr::select(c(8:(nloci+7))))
sons.gamete <- Dads.of.sons.gamete + Moms.of.sons.gamete
#stick the genotypes for this year's nestlings into the simindivgenoAll table
simindivgenoAll[simindivgenoAll$Indiv %in% these.female.nestlings,8:(nloci+7)] <- daughters.gamete
simindivgenoAll[simindivgenoAll$Indiv %in% these.male.nestlings,8:(nloci+7)] <- sons.gamete
#check that the nestlings now have genotypes (not NA)
stopifnot(all(!is.na( simindivgenoAll %>% filter(Indiv %in% these.female.nestlings) %>% dplyr::select(c(8:(nloci+7))) )))
stopifnot(all(!is.na (simindivgenoAll %>% filter(Indiv %in% these.male.nestlings)   %>% dplyr::select(c(8:(nloci+7))) )))
}
library(foreach)
library(plyr)
library(tidyverse) #v.1.3.1
####set variables and make/import tables####
#number of SNPs to simulate
nloci<-1000 #00
#get input files: fixed list of indiv in each Category each year
load(file='working_files/intermediate_files/indivlistgenoZ.rdata')
indivlistgeno <- indivlistgenoZ
names(indivlistgeno)[c(1:7)] <- c( "Year","Indiv", "Category", "Genotyped", "Mom", "Dad", "Sex")
indivlistgeno$Indiv<-as.character(indivlistgeno$Indiv)
indivlistgeno$Dad<-as.character(indivlistgeno$Dad)
indivlistgeno$Mom<-as.character(indivlistgeno$Mom)
####simulate starting genotypes####
#get real frequency of each allele in 1990 (accounting for different total # of alleles in males & females)
datafreq1990<-plyr::laply(names(indivlistgeno)[9:length(indivlistgeno)],function(x)
sum(indivlistgeno[indivlistgeno$Year==1990,x],na.rm=TRUE)/
((2*sum(!is.na(indivlistgeno[indivlistgeno$Year==1990&indivlistgeno$Sex==1,x])))
+(sum(!is.na(indivlistgeno[indivlistgeno$Year==1990&indivlistgeno$Sex==2,x])))))
#randomly sample from real allele frequencies
simfreq<-sample(datafreq1990,nloci,replace=TRUE)
#sort indivlist
indivlist <- indivlistgeno[order(indivlistgeno$Year),c(1:7)]
colnames(indivlist) <- c( "Year","Indiv", "Category", "Genotyped", "Mom", "Dad", "Sex")
simindivgeno<-indivlist[!duplicated(indivlist$Indiv),]
simindivgeno$Mom[simindivgeno$Mom == 0] <- NA
simindivgeno$Dad[simindivgeno$Dad == 0] <- NA
#separate into moms vs dads vs nestlings
simindivgenoMoms<-
simindivgeno[(simindivgeno$Category!='nestling' | is.na(simindivgeno$Mom)) & simindivgeno$Sex==2,]
simindivgenoDads<-
simindivgeno[(simindivgeno$Category!='nestling' | is.na(simindivgeno$Mom)) & simindivgeno$Sex==1,]
simindivgenoNestlings<-
simindivgeno[simindivgeno$Category=='nestling' & !is.na(simindivgeno$Mom),]
#simulate genotypes for adults
#moms - 0 1
num.moms<-nrow(simindivgenoMoms)
mom.genos<-sapply(1:nloci,function(loc){
freq<-simfreq[loc]
HWE<-c(1-freq,freq)
loc.genos<-sample(0:1,size=num.moms,prob=HWE,replace=TRUE)
loc.genos
})
simindivgenoMoms
library(foreach)
#library(doParallel)
library(plyr)
library(tidyverse) #v.1.3.1
####set variables and make/import tables####
#number of SNPs to simulate
nloci<-1000 #00
#get input files: fixed list of indiv in each Category each year
load(file='working_files/intermediate_files/indivlistgenoZ.rdata')
#ldprune.SNP <- read.table('ldprune.Z.SNP.list', header = FALSE, sep = "", dec = ".")
#ldprune.cols <- c(names(indivlistgeno_Z)[c(1:8)],ldprune.SNP$V1)
#indivlistgeno <- indivlistgeno_Z[,ldprune.cols]
indivlistgeno <- indivlistgenoZ
names(indivlistgeno)[c(1:7)] <- c( "Year","Indiv", "Category", "Genotyped", "Mom", "Dad", "Sex")
indivlistgeno$Indiv<-as.character(indivlistgeno$Indiv)
indivlistgeno$Dad<-as.character(indivlistgeno$Dad)
indivlistgeno$Mom<-as.character(indivlistgeno$Mom)
####simulate starting genotypes####
#get real frequency of each allele in 1990 (accounting for different total # of alleles in males & females)
datafreq1990<-plyr::laply(names(indivlistgeno)[9:length(indivlistgeno)],function(x)
sum(indivlistgeno[indivlistgeno$Year==1990,x],na.rm=TRUE)/
((2*sum(!is.na(indivlistgeno[indivlistgeno$Year==1990&indivlistgeno$Sex==1,x])))
+(sum(!is.na(indivlistgeno[indivlistgeno$Year==1990&indivlistgeno$Sex==2,x])))))
#randomly sample from real allele frequencies
simfreq<-sample(datafreq1990,nloci,replace=TRUE)
library(foreach)
#library(doParallel)
library(plyr)
library(tidyverse) #v.1.3.1
####set variables and make/import tables####
#number of SNPs to simulate
nloci<-1000 #00
#get input files: fixed list of indiv in each Category each year
load(file='working_files/intermediate_files/indivlistgenoZ.rdata')
#ldprune.SNP <- read.table('ldprune.Z.SNP.list', header = FALSE, sep = "", dec = ".")
#ldprune.cols <- c(names(indivlistgeno_Z)[c(1:8)],ldprune.SNP$V1)
#indivlistgeno <- indivlistgeno_Z[,ldprune.cols]
indivlistgeno <- indivlistgenoZ
names(indivlistgeno)[c(1:7)] <- c( "Year","Indiv", "Category", "Genotyped", "Mom", "Dad", "Sex")
indivlistgeno$Indiv<-as.character(indivlistgeno$Indiv)
indivlistgeno$Dad<-as.character(indivlistgeno$Dad)
indivlistgeno$Mom<-as.character(indivlistgeno$Mom)
####simulate starting genotypes####
#get real frequency of each allele in 1990 (accounting for different total # of alleles in males & females)
datafreq1990<-plyr::laply(names(indivlistgeno)[8:length(indivlistgeno)],function(x)
sum(indivlistgeno[indivlistgeno$Year==1990,x],na.rm=TRUE)/
((2*sum(!is.na(indivlistgeno[indivlistgeno$Year==1990&indivlistgeno$Sex==1,x])))
+(sum(!is.na(indivlistgeno[indivlistgeno$Year==1990&indivlistgeno$Sex==2,x])))))
#randomly sample from real allele frequencies
simfreq<-sample(datafreq1990,nloci,replace=TRUE)
simfreq
#sort indivlist
indivlist <- indivlistgeno[order(indivlistgeno$Year),c(1:7)]
colnames(indivlist) <- c( "Year","Indiv", "Category", "Genotyped", "Mom", "Dad", "Sex")
simindivgeno<-indivlist[!duplicated(indivlist$Indiv),]
simindivgeno$Mom[simindivgeno$Mom == 0] <- NA
simindivgeno$Dad[simindivgeno$Dad == 0] <- NA
#get input files: fixed list of indiv in each Category each year
load(file='working_files/intermediate_files/indivlistgenoZ.rdata')
indivlistgeno <- indivlistgenoZ
names(indivlistgeno)[c(1:7)]
library(foreach)
#library(doParallel)
library(plyr)
library(tidyverse) #v.1.3.1
####set variables and make/import tables####
#number of SNPs to simulate
nloci<-1000 #00
#get input files: fixed list of indiv in each Category each year
load(file='working_files/intermediate_files/indivlistgenoZ.rdata')
#ldprune.SNP <- read.table('ldprune.Z.SNP.list', header = FALSE, sep = "", dec = ".")
#ldprune.cols <- c(names(indivlistgeno_Z)[c(1:8)],ldprune.SNP$V1)
#indivlistgeno <- indivlistgeno_Z[,ldprune.cols]
indivlistgeno <- indivlistgenoZ
names(indivlistgeno)[c(1:7)] <- c( "Year","Indiv", "Category", "Genotyped", "Mom", "Dad", "Sex")
indivlistgeno$Indiv<-as.character(indivlistgeno$Indiv)
indivlistgeno$Dad<-as.character(indivlistgeno$Dad)
indivlistgeno$Mom<-as.character(indivlistgeno$Mom)
####simulate starting genotypes####
#get real frequency of each allele in 1990 (accounting for different total # of alleles in males & females)
datafreq1990<-plyr::laply(names(indivlistgeno)[8:length(indivlistgeno)],function(x)
sum(indivlistgeno[indivlistgeno$Year==1990,x],na.rm=TRUE)/
((2*sum(!is.na(indivlistgeno[indivlistgeno$Year==1990&indivlistgeno$Sex==1,x])))
+(sum(!is.na(indivlistgeno[indivlistgeno$Year==1990&indivlistgeno$Sex==2,x])))))
#randomly sample from real allele frequencies
simfreq<-sample(datafreq1990,nloci,replace=TRUE)
#sort indivlist
indivlist <- indivlistgeno[order(indivlistgeno$Year),c(1:7)]
colnames(indivlist) <- c( "Year","Indiv", "Category", "Genotyped", "Mom", "Dad", "Sex")
simindivgeno<-indivlist[!duplicated(indivlist$Indiv),]
simindivgeno$Mom[simindivgeno$Mom == 0] <- NA
simindivgeno$Dad[simindivgeno$Dad == 0] <- NA
#separate into moms vs dads vs nestlings
simindivgenoMoms<-
simindivgeno[(simindivgeno$Category!='nestling' | is.na(simindivgeno$Mom)) & simindivgeno$Sex==2,]
simindivgenoDads<-
simindivgeno[(simindivgeno$Category!='nestling' | is.na(simindivgeno$Mom)) & simindivgeno$Sex==1,]
simindivgenoNestlings<-
simindivgeno[simindivgeno$Category=='nestling' & !is.na(simindivgeno$Mom),]
nrow(simindivgenoMoms)
#simulate genotypes for adults
#moms - 0 1
num.moms<-nrow(simindivgenoMoms)
nloci
#simulate genotypes for adults
#moms - 0 1
num.moms<-nrow(simindivgenoMoms)
mom.genos<-sapply(1:nloci,function(loc){
freq<-simfreq[loc]
HWE<-c(1-freq,freq)
loc.genos<-sample(0:1,size=num.moms,prob=HWE,replace=TRUE)
loc.genos
})
simfreq
nloci<-1000 #00
#get input files: fixed list of indiv in each Category each year
load(file='working_files/intermediate_files/indivlistgenoZ.rdata')
#ldprune.SNP <- read.table('ldprune.Z.SNP.list', header = FALSE, sep = "", dec = ".")
#ldprune.cols <- c(names(indivlistgeno_Z)[c(1:8)],ldprune.SNP$V1)
#indivlistgeno <- indivlistgeno_Z[,ldprune.cols]
indivlistgeno <- indivlistgenoZ
names(indivlistgeno)[c(1:7)] <- c( "Year","Indiv", "Category", "Genotyped", "Mom", "Dad", "Sex")
indivlistgeno$Indiv<-as.character(indivlistgeno$Indiv)
indivlistgeno$Dad<-as.character(indivlistgeno$Dad)
indivlistgeno$Mom<-as.character(indivlistgeno$Mom)
####simulate starting genotypes####
#get real frequency of each allele in 1990 (accounting for different total # of alleles in males & females)
datafreq1990<-plyr::laply(names(indivlistgeno)[8:length(indivlistgeno)],function(x)
sum(indivlistgeno[indivlistgeno$Year==1990,x],na.rm=TRUE)/
((2*sum(!is.na(indivlistgeno[indivlistgeno$Year==1990&indivlistgeno$Sex==1,x])))
+(sum(!is.na(indivlistgeno[indivlistgeno$Year==1990&indivlistgeno$Sex==2,x])))))
#randomly sample from real allele frequencies
simfreq<-sample(datafreq1990,nloci,replace=TRUE)
#sort indivlist
indivlist <- indivlistgeno[order(indivlistgeno$Year),c(1:7)]
colnames(indivlist) <- c( "Year","Indiv", "Category", "Genotyped", "Mom", "Dad", "Sex")
simindivgeno<-indivlist[!duplicated(indivlist$Indiv),]
simindivgeno$Mom[simindivgeno$Mom == 0] <- NA
simindivgeno$Dad[simindivgeno$Dad == 0] <- NA
#separate into moms vs dads vs nestlings
simindivgenoMoms<-
simindivgeno[(simindivgeno$Category!='nestling' | is.na(simindivgeno$Mom)) & simindivgeno$Sex==2,]
simindivgenoDads<-
simindivgeno[(simindivgeno$Category!='nestling' | is.na(simindivgeno$Mom)) & simindivgeno$Sex==1,]
simindivgenoNestlings<-
simindivgeno[simindivgeno$Category=='nestling' & !is.na(simindivgeno$Mom),]
simfreq
sort(simfreq)
library(foreach)
#library(doParallel)
library(plyr)
library(tidyverse) #v.1.3.1
####set variables and make/import tables####
#number of SNPs to simulate
nloci<-1000 #00
#get input files: fixed list of indiv in each Category each year
load(file='working_files/intermediate_files/indivlistgenoZ.rdata')
#ldprune.SNP <- read.table('ldprune.Z.SNP.list', header = FALSE, sep = "", dec = ".")
#ldprune.cols <- c(names(indivlistgeno_Z)[c(1:8)],ldprune.SNP$V1)
#indivlistgeno <- indivlistgeno_Z[,ldprune.cols]
indivlistgeno <- indivlistgenoZ
names(indivlistgeno)[c(1:7)] <- c( "Year","Indiv", "Category", "Genotyped", "Mom", "Dad", "Sex")
indivlistgeno$Indiv<-as.character(indivlistgeno$Indiv)
indivlistgeno$Dad<-as.character(indivlistgeno$Dad)
indivlistgeno$Mom<-as.character(indivlistgeno$Mom)
####simulate starting genotypes####
#get real frequency of each allele in 1990 (accounting for different total # of alleles in males & females)
datafreq1990<-plyr::laply(names(indivlistgeno)[8:length(indivlistgeno)],function(x)
sum(indivlistgeno[indivlistgeno$Year==1990,x],na.rm=TRUE)/
((2*sum(!is.na(indivlistgeno[indivlistgeno$Year==1990&indivlistgeno$Sex==1,x])))
+(sum(!is.na(indivlistgeno[indivlistgeno$Year==1990&indivlistgeno$Sex==2,x])))))
View(indivlistgeno)
