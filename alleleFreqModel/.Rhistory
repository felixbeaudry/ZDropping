library(foreach)
library(doParallel)
####set variables and make/import tables####
#number of SNPs to simulate
nloci<-100000
#get date script is run
today<-format(Sys.Date(),format="%d%b%Y")
#get input files: fixed list of indiv in each Category each year
load("working_files/simindivFIXmin2obs.rdata")
#get sex from pedigree
ped<-read.table('working_files/FSJpedgeno_Zsexlinked.ped',header=FALSE,sep=' ',stringsAsFactors=FALSE)
pedinfo <- ped[,1:5]
colnames(pedinfo) <- c("Family", "USFWS", "Dad", "Mom", "Sex")
#get sample allele freq for simulations, from _sample script
load(file="working_files/intermediate_files/sampleVar_Z.rdata")
library(plyr)
library(foreach)
library(dplyr)
library(doParallel)
library(data.table)
####set variables and make/import tables####
#number of SNPs to simulate
nloci<-100000
#get date script is run
today<-format(Sys.Date(),format="%d%b%Y")
#get input files: fixed list of indiv in each Category each year
load("working_files/simindivFIXmin2obs.rdata")
#get sex from pedigree
load("working_files/FSJpedgeno_A.rdata")
pedinfo <- ped_Ageno[,1:4]
colnames(pedinfo) <- c( "USFWS", "Dad", "Mom", "Sex")
#get sample allele freq for simulations, from _sample script
load(file="working_files/intermediate_files/sampleVar_A.rdata")
load(file="working_files/intermediate_files/indivlistgenoA.rdata")
indivlistgeno$Indiv<-as.character(indivlistgeno$Indiv)
indivlistgeno$Dad<-as.character(indivlistgeno$Dad)
indivlistgeno$Mom<-as.character(indivlistgeno$Mom)
####simulate starting genotypes####
#get real frequency of each allele in 1990 (accounting for different total # of alleles in males & females)
datafreq1990<-laply(names(indivlistgeno)[8:length(indivlistgeno)],function(x)
sum(indivlistgeno[indivlistgeno$Year==1990,x],na.rm=TRUE)/
((2*sum(!is.na(indivlistgeno[indivlistgeno$Year==1990&indivlistgeno$Sex==1,x])))
+(2*sum(!is.na(indivlistgeno[indivlistgeno$Year==1990&indivlistgeno$Sex==2,x])))))
#randomly sample from real allele frequencies
simfreq<-sample(datafreq1990,nloci,replace=TRUE)
#add sex data to indivlist - can't use indivlistgeno for this as we need to include ungenotyped birds
indivlist <- merge(simindivFIXmin2obs[,1:6],pedinfo[,c(1,4)],by='USFWS')
#sort indivlist
indivlist <- indivlist[order(indivlist$Year),]
#get unique indivs
simindivgeno<-indivlist[!duplicated(indivlist$USFWS),]
#colnames(simindivgeno) <- c("Indiv", "Year", "Category", "Genotyped", "Mom", "Dad", "Sex")
colnames(simindivgeno) <- c("Indiv", "Year", "Category", "Genotyped", "Mom", "Dad", "og_Sex")
#add assigned sexes of unsexed birds back to indivlist
#(this way, a given unsexed bird will always have the same assigned sex even if it appears multiple times in indivlist)
indivlist$Sex <- simindivgeno$Sex[match(indivlist$USFWS, simindivgeno$Indiv)]
simulated_sexes <- fread('working_files/FSJ_sex_data_real_and_simulated_20201015.csv')
colnames(simulated_sexes) <- c("Indiv", "Sex")
simindivgeno <- left_join(simindivgeno[,-7],simulated_sexes,by=c("Indiv"="Indiv"))
#separate into moms vs dads vs nestlings
simindivgenoMoms<-
simindivgeno[(simindivgeno$Category!='nestling' | is.na(simindivgeno$Mom)) & simindivgeno$Sex==2,]
simindivgenoDads<-
simindivgeno[(simindivgeno$Category!='nestling' | is.na(simindivgeno$Mom)) & simindivgeno$Sex==1,]
simindivgenoNestlings<-
simindivgeno[simindivgeno$Category=='nestling' & !is.na(simindivgeno$Mom),]
#simulate genotypes for adults
#moms - 0 1 2
num.moms<-nrow(simindivgenoMoms)
mom.genos<-sapply(1:nloci,function(loc){
freq<-simfreq[loc]
HWE<-c((1-freq)^2,2*freq*(1-freq),freq^2)
loc.genos<-sample(0:2,size=num.moms,prob=HWE,replace=TRUE)
loc.genos
})
#dads - 0 1 2
num.dads<-nrow(simindivgenoDads)
dad.genos<-sapply(1:nloci,function(loc){
freq<-simfreq[loc]
HWE<-c((1-freq)^2,2*freq*(1-freq),freq^2)
loc.genos<-sample(0:2,size=num.dads,prob=HWE,replace=TRUE)
loc.genos
})
#combine simulated mom genotypes with real mom IDs & info
simindivgenoMoms<-cbind(simindivgenoMoms,mom.genos)
#combine simulated dad genotypes with real dad IDs & info
simindivgenoDads<-cbind(simindivgenoDads,dad.genos)
#put the moms and dads back together in one table
simindivgenoParents <- rbind(simindivgenoMoms, simindivgenoDads)
#combine it back with a big table that has space for every individual
simindivgenoAll<-cbind(simindivgeno,simindivgenoParents[match(simindivgeno$Indiv,
simindivgenoParents$Indiv),8:(nloci+7)])
#add rownames
rownames(simindivgenoAll)<-simindivgenoAll$Indiv
#get years
nest.years<-unique(simindivgenoNestlings$Year)
#for fathers, will need to sample their gametes to get kid genotypes
make.male.gametes<-function(g){
gametes<-rep(NA,length(g))
gametes[g==0]<-0
gametes[g==2]<-1
hets <- g==1 & !is.na(g)
gametes[hets]<-sample(c(0,1),sum(hets),prob=c(0.5,0.5),replace=TRUE)
gametes
}
#also need to sample mothers' gametes to get kid genotypes
make.female.gametes<-function(g){
gametes<-rep(NA,length(g))
gametes[g==0]<-0
gametes[g==2]<-1
hets <- g==1 & !is.na(g)
gametes[hets]<-sample(c(0,1),sum(hets),prob=c(0.5,0.5),replace=TRUE)
gametes
}
nest.years
#get kid genotypes, one year at a time
year = 1991
#pull out female nestlings for this year
these.female.nestlings<-simindivgenoNestlings[simindivgenoNestlings$Year==year
& simindivgenoNestlings$Sex==2, "Indiv"]
#pull out male nestlings for this year
these.male.nestlings<-simindivgenoNestlings[simindivgenoNestlings$Year==year
& simindivgenoNestlings$Sex==1, "Indiv"]
#include moms of this year's female nestlings as they *do* contribute Zs
these.moms.of.daughters<-simindivgenoNestlings[simindivgenoNestlings$Year==year
& simindivgenoNestlings$Sex==2,'Mom']
#get a list of the moms of this year's male nestlings
these.moms.of.sons<-simindivgenoNestlings[simindivgenoNestlings$Year==year
& simindivgenoNestlings$Sex==1, "Mom"]
#get a list of the dads of this year's female nestlings
these.dads.of.daughters<-simindivgenoNestlings[simindivgenoNestlings$Year==year
& simindivgenoNestlings$Sex==2, "Dad"]
#get a list of the dads of this year's male nestlings
these.dads.of.sons<-simindivgenoNestlings[simindivgenoNestlings$Year==year
& simindivgenoNestlings$Sex==1, "Dad"]
#check that the nestlings don't have genotypes yet (should be NA)
stopifnot(all(is.na(simindivgenoAll[these.female.nestlings,8:(nloci+7)])))
stopifnot(all(is.na(simindivgenoAll[these.male.nestlings,8:(nloci+7)])))
#get parents' genotypes
moms.of.daughters.geno<-simindivgenoAll[these.moms.of.daughters,,drop = FALSE]
moms.of.sons.geno<-simindivgenoAll[these.moms.of.sons,,drop = FALSE]
dads.of.daughters.geno<-simindivgenoAll[these.dads.of.daughters,,drop = FALSE]
dads.of.sons.geno<-simindivgenoAll[these.dads.of.sons,,drop = FALSE]
#check that all parents are genotyped (NOT NA)
stopifnot(all(!is.na(moms.of.daughters.geno[,8:(nloci+7)])))
stopifnot(all(!is.na(moms.of.sons.geno[,8:(nloci+7)])))
stopifnot(all(!is.na(dads.of.daughters.geno[,8:(nloci+7)])))
stopifnot(all(!is.na(dads.of.sons.geno[,8:(nloci+7)])))
#run the gamete selector function to pick which gamete dads give their kids
Dads.of.daughters.gamete<-apply(dads.of.daughters.geno[,8:(nloci+7)],2,make.male.gametes)
Dads.of.sons.gamete<-apply(dads.of.sons.geno[,8:(nloci+7)],2,make.male.gametes)
# moms *do* give daughters autosomal alleles so include moms of daughters
Moms.of.daughters.gamete<-apply(moms.of.daughters.geno[,8:(nloci+7)],2,make.female.gametes)
Moms.of.sons.gamete<-apply(moms.of.sons.geno[,8:(nloci+7)],2,make.female.gametes)
#female nestlings get allele from dad + allele from mom
female.nestling.geno<-Dads.of.daughters.gamete+Moms.of.daughters.gamete
#male nestlings get allele from dad + allele from mom
male.nestling.geno<-Dads.of.sons.gamete+Moms.of.sons.gamete
#stick the genotypes for this year's nestlings into the simindivgenoAll table
simindivgenoAll[these.female.nestlings,8:(nloci+7)] <- female.nestling.geno
simindivgenoAll[these.male.nestlings,8:(nloci+7)] <- male.nestling.geno
#check that the nestlings now have genotypes (not NA)
stopifnot(all(!is.na(simindivgenoAll[these.female.nestlings,8:(nloci+7)])))
stopifnot(all(!is.na(simindivgenoAll[these.male.nestlings,8:(nloci+7)])))
#get kid genotypes, one year at a time
#year = 1991
for(year in nest.years){
#pull out female nestlings for this year
these.female.nestlings<-simindivgenoNestlings[simindivgenoNestlings$Year==year
& simindivgenoNestlings$Sex==2, "Indiv"]
#pull out male nestlings for this year
these.male.nestlings<-simindivgenoNestlings[simindivgenoNestlings$Year==year
& simindivgenoNestlings$Sex==1, "Indiv"]
#include moms of this year's female nestlings as they *do* contribute Zs
these.moms.of.daughters<-simindivgenoNestlings[simindivgenoNestlings$Year==year
& simindivgenoNestlings$Sex==2,'Mom']
#get a list of the moms of this year's male nestlings
these.moms.of.sons<-simindivgenoNestlings[simindivgenoNestlings$Year==year
& simindivgenoNestlings$Sex==1, "Mom"]
#get a list of the dads of this year's female nestlings
these.dads.of.daughters<-simindivgenoNestlings[simindivgenoNestlings$Year==year
& simindivgenoNestlings$Sex==2, "Dad"]
#get a list of the dads of this year's male nestlings
these.dads.of.sons<-simindivgenoNestlings[simindivgenoNestlings$Year==year
& simindivgenoNestlings$Sex==1, "Dad"]
#check that the nestlings don't have genotypes yet (should be NA)
stopifnot(all(is.na(simindivgenoAll[these.female.nestlings,8:(nloci+7)])))
stopifnot(all(is.na(simindivgenoAll[these.male.nestlings,8:(nloci+7)])))
#get parents' genotypes
moms.of.daughters.geno<-simindivgenoAll[these.moms.of.daughters,,drop = FALSE]
moms.of.sons.geno<-simindivgenoAll[these.moms.of.sons,,drop = FALSE]
dads.of.daughters.geno<-simindivgenoAll[these.dads.of.daughters,,drop = FALSE]
dads.of.sons.geno<-simindivgenoAll[these.dads.of.sons,,drop = FALSE]
#check that all parents are genotyped (NOT NA)
stopifnot(all(!is.na(moms.of.daughters.geno[,8:(nloci+7)])))
stopifnot(all(!is.na(moms.of.sons.geno[,8:(nloci+7)])))
stopifnot(all(!is.na(dads.of.daughters.geno[,8:(nloci+7)])))
stopifnot(all(!is.na(dads.of.sons.geno[,8:(nloci+7)])))
#run the gamete selector function to pick which gamete dads give their kids
Dads.of.daughters.gamete<-apply(dads.of.daughters.geno[,8:(nloci+7)],2,make.male.gametes)
Dads.of.sons.gamete<-apply(dads.of.sons.geno[,8:(nloci+7)],2,make.male.gametes)
# moms *do* give daughters autosomal alleles so include moms of daughters
Moms.of.daughters.gamete<-apply(moms.of.daughters.geno[,8:(nloci+7)],2,make.female.gametes)
Moms.of.sons.gamete<-apply(moms.of.sons.geno[,8:(nloci+7)],2,make.female.gametes)
#female nestlings get allele from dad + allele from mom
female.nestling.geno<-Dads.of.daughters.gamete+Moms.of.daughters.gamete
#male nestlings get allele from dad + allele from mom
male.nestling.geno<-Dads.of.sons.gamete+Moms.of.sons.gamete
#stick the genotypes for this year's nestlings into the simindivgenoAll table
simindivgenoAll[these.female.nestlings,8:(nloci+7)] <- female.nestling.geno
simindivgenoAll[these.male.nestlings,8:(nloci+7)] <- male.nestling.geno
#check that the nestlings now have genotypes (not NA)
stopifnot(all(!is.na(simindivgenoAll[these.female.nestlings,8:(nloci+7)])))
stopifnot(all(!is.na(simindivgenoAll[these.male.nestlings,8:(nloci+7)])))
}
library(plyr)
library(foreach)
library(dplyr)
library(doParallel)
library(data.table)
####set variables and make/import tables####
#number of SNPs to simulate
nloci<-100000
#get date script is run
today<-format(Sys.Date(),format="%d%b%Y")
#get input files: fixed list of indiv in each Category each year
load("working_files/simindivFIXmin2obs.rdata")
#get sex from pedigree
load("working_files/FSJpedgeno_A.rdata")
pedinfo <- ped_Ageno[,1:4]
colnames(pedinfo) <- c( "USFWS", "Dad", "Mom", "Sex")
#get sample allele freq for simulations, from _sample script
load(file="working_files/intermediate_files/sampleVar_A.rdata")
load(file="working_files/intermediate_files/indivlistgenoA.rdata")
indivlistgeno$Indiv<-as.character(indivlistgeno$Indiv)
indivlistgeno$Dad<-as.character(indivlistgeno$Dad)
indivlistgeno$Mom<-as.character(indivlistgeno$Mom)
####simulate starting genotypes####
#get real frequency of each allele in 1990 (accounting for different total # of alleles in males & females)
datafreq1990<-laply(names(indivlistgeno)[8:length(indivlistgeno)],function(x)
sum(indivlistgeno[indivlistgeno$Year==1990,x],na.rm=TRUE)/
((2*sum(!is.na(indivlistgeno[indivlistgeno$Year==1990&indivlistgeno$Sex==1,x])))
+(2*sum(!is.na(indivlistgeno[indivlistgeno$Year==1990&indivlistgeno$Sex==2,x])))))
#randomly sample from real allele frequencies
simfreq<-sample(datafreq1990,nloci,replace=TRUE)
#add sex data to indivlist - can't use indivlistgeno for this as we need to include ungenotyped birds
indivlist <- merge(simindivFIXmin2obs[,1:6],pedinfo[,c(1,4)],by='USFWS')
#sort indivlist
indivlist <- indivlist[order(indivlist$Year),]
#get unique indivs
simindivgeno<-indivlist[!duplicated(indivlist$USFWS),]
colnames(simindivgeno) <- c("Indiv", "Year", "Category", "Genotyped", "Mom", "Dad", "Sex")
#colnames(simindivgeno) <- c("Indiv", "Year", "Category", "Genotyped", "Mom", "Dad", "og_Sex")
#check for unsexed indivs & assign them a sex
#unsexed_indivs <- simindivgeno$Indiv[simindivgeno$Sex==0]
#simulated_sexes <- sample(x = c(1,2), size = length(unsexed_indivs), prob = c(0.5,0.5), replace = TRUE)
#simindivgeno$Sex[simindivgeno$Sex==0] <- simulated_sexes
#add assigned sexes of unsexed birds back to indivlist
#(this way, a given unsexed bird will always have the same assigned sex even if it appears multiple times in indivlist)
indivlist$Sex <- simindivgeno$Sex[match(indivlist$USFWS, simindivgeno$Indiv)]
simulated_sexes <- fread('working_files/FSJ_sex_data_real_and_simulated_20201015.csv')
colnames(simulated_sexes) <- c("Indiv", "Sex")
simindivgeno <- left_join(simindivgeno[,-7],simulated_sexes,by=c("Indiv"="Indiv"))
#separate into moms vs dads vs nestlings
simindivgenoMoms<-
simindivgeno[(simindivgeno$Category!='nestling' | is.na(simindivgeno$Mom)) & simindivgeno$Sex==2,]
simindivgenoDads<-
simindivgeno[(simindivgeno$Category!='nestling' | is.na(simindivgeno$Mom)) & simindivgeno$Sex==1,]
simindivgenoNestlings<-
simindivgeno[simindivgeno$Category=='nestling' & !is.na(simindivgeno$Mom),]
#simulate genotypes for adults
#moms - 0 1 2
num.moms<-nrow(simindivgenoMoms)
mom.genos<-sapply(1:nloci,function(loc){
freq<-simfreq[loc]
HWE<-c((1-freq)^2,2*freq*(1-freq),freq^2)
loc.genos<-sample(0:2,size=num.moms,prob=HWE,replace=TRUE)
loc.genos
})
#dads - 0 1 2
num.dads<-nrow(simindivgenoDads)
dad.genos<-sapply(1:nloci,function(loc){
freq<-simfreq[loc]
HWE<-c((1-freq)^2,2*freq*(1-freq),freq^2)
loc.genos<-sample(0:2,size=num.dads,prob=HWE,replace=TRUE)
loc.genos
})
#combine simulated mom genotypes with real mom IDs & info
simindivgenoMoms<-cbind(simindivgenoMoms,mom.genos)
#combine simulated dad genotypes with real dad IDs & info
simindivgenoDads<-cbind(simindivgenoDads,dad.genos)
#put the moms and dads back together in one table
simindivgenoParents <- rbind(simindivgenoMoms, simindivgenoDads)
#combine it back with a big table that has space for every individual
simindivgenoAll<-cbind(simindivgeno,simindivgenoParents[match(simindivgeno$Indiv,
simindivgenoParents$Indiv),8:(nloci+7)])
#add rownames
rownames(simindivgenoAll)<-simindivgenoAll$Indiv
####simulate genotypes for nestlings via Mendelian transmission of alleles from parents####
#get years
nest.years<-unique(simindivgenoNestlings$Year)
#for fathers, will need to sample their gametes to get kid genotypes
make.male.gametes<-function(g){
gametes<-rep(NA,length(g))
gametes[g==0]<-0
gametes[g==2]<-1
hets <- g==1 & !is.na(g)
gametes[hets]<-sample(c(0,1),sum(hets),prob=c(0.5,0.5),replace=TRUE)
gametes
}
#also need to sample mothers' gametes to get kid genotypes
make.female.gametes<-function(g){
gametes<-rep(NA,length(g))
gametes[g==0]<-0
gametes[g==2]<-1
hets <- g==1 & !is.na(g)
gametes[hets]<-sample(c(0,1),sum(hets),prob=c(0.5,0.5),replace=TRUE)
gametes
}
#get kid genotypes, one year at a time
#year = 1991
#get kid genotypes, one year at a time
#year = 1991
for(year in nest.years){
#pull out female nestlings for this year
these.female.nestlings<-simindivgenoNestlings[simindivgenoNestlings$Year==year
& simindivgenoNestlings$Sex==2, "Indiv"]
#pull out male nestlings for this year
these.male.nestlings<-simindivgenoNestlings[simindivgenoNestlings$Year==year
& simindivgenoNestlings$Sex==1, "Indiv"]
#include moms of this year's female nestlings as they *do* contribute Zs
these.moms.of.daughters<-simindivgenoNestlings[simindivgenoNestlings$Year==year
& simindivgenoNestlings$Sex==2,'Mom']
#get a list of the moms of this year's male nestlings
these.moms.of.sons<-simindivgenoNestlings[simindivgenoNestlings$Year==year
& simindivgenoNestlings$Sex==1, "Mom"]
#get a list of the dads of this year's female nestlings
these.dads.of.daughters<-simindivgenoNestlings[simindivgenoNestlings$Year==year
& simindivgenoNestlings$Sex==2, "Dad"]
#get a list of the dads of this year's male nestlings
these.dads.of.sons<-simindivgenoNestlings[simindivgenoNestlings$Year==year
& simindivgenoNestlings$Sex==1, "Dad"]
#check that the nestlings don't have genotypes yet (should be NA)
stopifnot(all(is.na(simindivgenoAll[these.female.nestlings,8:(nloci+7)])))
stopifnot(all(is.na(simindivgenoAll[these.male.nestlings,8:(nloci+7)])))
#get parents' genotypes
moms.of.daughters.geno<-simindivgenoAll[these.moms.of.daughters,,drop = FALSE]
moms.of.sons.geno<-simindivgenoAll[these.moms.of.sons,,drop = FALSE]
dads.of.daughters.geno<-simindivgenoAll[these.dads.of.daughters,,drop = FALSE]
dads.of.sons.geno<-simindivgenoAll[these.dads.of.sons,,drop = FALSE]
#check that all parents are genotyped (NOT NA)
stopifnot(all(!is.na(moms.of.daughters.geno[,8:(nloci+7)])))
stopifnot(all(!is.na(moms.of.sons.geno[,8:(nloci+7)])))
stopifnot(all(!is.na(dads.of.daughters.geno[,8:(nloci+7)])))
stopifnot(all(!is.na(dads.of.sons.geno[,8:(nloci+7)])))
#run the gamete selector function to pick which gamete dads give their kids
Dads.of.daughters.gamete<-apply(dads.of.daughters.geno[,8:(nloci+7)],2,make.male.gametes)
Dads.of.sons.gamete<-apply(dads.of.sons.geno[,8:(nloci+7)],2,make.male.gametes)
# moms *do* give daughters autosomal alleles so include moms of daughters
Moms.of.daughters.gamete<-apply(moms.of.daughters.geno[,8:(nloci+7)],2,make.female.gametes)
Moms.of.sons.gamete<-apply(moms.of.sons.geno[,8:(nloci+7)],2,make.female.gametes)
#female nestlings get allele from dad + allele from mom
female.nestling.geno<-Dads.of.daughters.gamete+Moms.of.daughters.gamete
#male nestlings get allele from dad + allele from mom
male.nestling.geno<-Dads.of.sons.gamete+Moms.of.sons.gamete
#stick the genotypes for this year's nestlings into the simindivgenoAll table
simindivgenoAll[these.female.nestlings,8:(nloci+7)] <- female.nestling.geno
simindivgenoAll[these.male.nestlings,8:(nloci+7)] <- male.nestling.geno
#check that the nestlings now have genotypes (not NA)
stopifnot(all(!is.na(simindivgenoAll[these.female.nestlings,8:(nloci+7)])))
stopifnot(all(!is.na(simindivgenoAll[these.male.nestlings,8:(nloci+7)])))
}
####calculate error in freq estimation due to sampling####
#get number of all genotyped indivs by category and in total
counts<-ddply(indivlist,.(Year,category,Sex),summarize,genotyped=2*sum(genotyped=='Y'),
total=length(category))
countsAll<-ddply(indivlist,.(Year),summarize,genotyped=2*sum(genotyped=='Y'),
total=length(category))
#calculate sample allele freq
#mimic sampling of genotyped indiv by selecting only indivs who actually were genotyped
simdataSample<-simdataTrue[simdataTrue$genotyped=='Y',]
simindivgenoAll[c(1:10),c(1,8)]
indivlist[c(1:10),]
load('working_files/intermediate_files/simdataTrueA.rdata')
####calculate error in freq estimation due to sampling####
#get number of all genotyped indivs by category and in total
counts<-ddply(indivlist,.(Year,category,Sex),summarize,genotyped=2*sum(genotyped=='Y'),
total=length(category))
countsAll<-ddply(indivlist,.(Year),summarize,genotyped=2*sum(genotyped=='Y'),
total=length(category))
#calculate sample allele freq
#mimic sampling of genotyped indiv by selecting only indivs who actually were genotyped
simdataSample<-simdataTrue[simdataTrue$genotyped=='Y',]
#get unique indivs in simulated data (all & genotyped)
simdataTrueUnique<-simdataTrue[!duplicated(simdataTrue$USFWS),]
simdataSampleUnique<-simdataSample[!duplicated(simdataSample$USFWS),]
#get unique indivs in simulated data (all & genotyped)
simdataTrueUnique<-simdataTrue[!duplicated(simdataTrue$USFWS),]
#get unique indivs in simulated data (all & genotyped)
simdataTrueUnique<-simdataTrue[!duplicated(simdataTrue$USFWS),]
library(plyr)
library(foreach)
library(dplyr)
library(doParallel)
library(data.table)
####set variables and make/import tables####
#number of SNPs to simulate
nloci<-100000
#get date script is run
today<-format(Sys.Date(),format="%d%b%Y")
#get input files: fixed list of indiv in each Category each year
load("working_files/simindivFIXmin2obs.rdata")
#get sex from pedigree
load("working_files/FSJpedgeno_A.rdata")
pedinfo <- ped_Ageno[,1:4]
colnames(pedinfo) <- c( "USFWS", "Dad", "Mom", "Sex")
#get sample allele freq for simulations, from _sample script
load(file="working_files/intermediate_files/sampleVar_A.rdata")
load(file="working_files/intermediate_files/indivlistgenoA.rdata")
indivlistgeno$Indiv<-as.character(indivlistgeno$Indiv)
indivlistgeno$Dad<-as.character(indivlistgeno$Dad)
indivlistgeno$Mom<-as.character(indivlistgeno$Mom)
####simulate starting genotypes####
#get real frequency of each allele in 1990 (accounting for different total # of alleles in males & females)
datafreq1990<-laply(names(indivlistgeno)[8:length(indivlistgeno)],function(x)
sum(indivlistgeno[indivlistgeno$Year==1990,x],na.rm=TRUE)/
((2*sum(!is.na(indivlistgeno[indivlistgeno$Year==1990&indivlistgeno$Sex==1,x])))
+(2*sum(!is.na(indivlistgeno[indivlistgeno$Year==1990&indivlistgeno$Sex==2,x])))))
#randomly sample from real allele frequencies
simfreq<-sample(datafreq1990,nloci,replace=TRUE)
#add sex data to indivlist - can't use indivlistgeno for this as we need to include ungenotyped birds
indivlist <- merge(simindivFIXmin2obs[,1:6],pedinfo[,c(1,4)],by='USFWS')
#sort indivlist
indivlist <- indivlist[order(indivlist$Year),]
#get unique indivs
simindivgeno<-indivlist[!duplicated(indivlist$USFWS),]
#colnames(simindivgeno) <- c("Indiv", "Year", "Category", "Genotyped", "Mom", "Dad", "Sex")
colnames(simindivgeno) <- c("Indiv", "Year", "Category", "Genotyped", "Mom", "Dad", "og_Sex")
#check for unsexed indivs & assign them a sex
#unsexed_indivs <- simindivgeno$Indiv[simindivgeno$Sex==0]
#simulated_sexes <- sample(x = c(1,2), size = length(unsexed_indivs), prob = c(0.5,0.5), replace = TRUE)
#simindivgeno$Sex[simindivgeno$Sex==0] <- simulated_sexes
#add assigned sexes of unsexed birds back to indivlist
#(this way, a given unsexed bird will always have the same assigned sex even if it appears multiple times in indivlist)
indivlist$Sex <- simindivgeno$Sex[match(indivlist$USFWS, simindivgeno$Indiv)]
simulated_sexes <- fread('working_files/FSJ_sex_data_real_and_simulated_20201015.csv')
colnames(simulated_sexes) <- c("Indiv", "Sex")
simindivgeno <- left_join(simindivgeno[,-7],simulated_sexes,by=c("Indiv"="Indiv"))
#separate into moms vs dads vs nestlings
simindivgenoMoms<-
simindivgeno[(simindivgeno$Category!='nestling' | is.na(simindivgeno$Mom)) & simindivgeno$Sex==2,]
simindivgenoDads<-
simindivgeno[(simindivgeno$Category!='nestling' | is.na(simindivgeno$Mom)) & simindivgeno$Sex==1,]
simindivgenoNestlings<-
simindivgeno[simindivgeno$Category=='nestling' & !is.na(simindivgeno$Mom),]
#simulate genotypes for adults
#moms - 0 1 2
num.moms<-nrow(simindivgenoMoms)
mom.genos<-sapply(1:nloci,function(loc){
freq<-simfreq[loc]
HWE<-c((1-freq)^2,2*freq*(1-freq),freq^2)
loc.genos<-sample(0:2,size=num.moms,prob=HWE,replace=TRUE)
loc.genos
})
#dads - 0 1 2
num.dads<-nrow(simindivgenoDads)
dad.genos<-sapply(1:nloci,function(loc){
freq<-simfreq[loc]
HWE<-c((1-freq)^2,2*freq*(1-freq),freq^2)
loc.genos<-sample(0:2,size=num.dads,prob=HWE,replace=TRUE)
loc.genos
})
#combine simulated mom genotypes with real mom IDs & info
simindivgenoMoms<-cbind(simindivgenoMoms,mom.genos)
#combine simulated dad genotypes with real dad IDs & info
simindivgenoDads<-cbind(simindivgenoDads,dad.genos)
#put the moms and dads back together in one table
simindivgenoParents <- rbind(simindivgenoMoms, simindivgenoDads)
#combine it back with a big table that has space for every individual
simindivgenoAll<-cbind(simindivgeno,simindivgenoParents[match(simindivgeno$Indiv,
simindivgenoParents$Indiv),8:(nloci+7)])
#add rownames
rownames(simindivgenoAll)<-simindivgenoAll$Indiv
####simulate genotypes for nestlings via Mendelian transmission of alleles from parents####
#get years
nest.years<-unique(simindivgenoNestlings$Year)
#for fathers, will need to sample their gametes to get kid genotypes
make.male.gametes<-function(g){
gametes<-rep(NA,length(g))
gametes[g==0]<-0
gametes[g==2]<-1
hets <- g==1 & !is.na(g)
gametes[hets]<-sample(c(0,1),sum(hets),prob=c(0.5,0.5),replace=TRUE)
gametes
}
#also need to sample mothers' gametes to get kid genotypes
make.female.gametes<-function(g){
gametes<-rep(NA,length(g))
gametes[g==0]<-0
gametes[g==2]<-1
hets <- g==1 & !is.na(g)
gametes[hets]<-sample(c(0,1),sum(hets),prob=c(0.5,0.5),replace=TRUE)
gametes
}
load('working_files/intermediate_files/simdataTrueA.rdata')
####calculate error in freq estimation due to sampling####
#get number of all genotyped indivs by category and in total
counts<-ddply(indivlist,.(Year,category,Sex),summarize,genotyped=2*sum(genotyped=='Y'),
total=length(category))
indivlist
simindivFIXmin2obs[,1:6]
pedinfo[,c(1,4)]
