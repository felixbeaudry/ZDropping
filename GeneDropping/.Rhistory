mutate(Z_mean = ifelse(is.na(Z_mean), 0, Z_mean), auto_mean = ifelse(is.na(auto_mean), 0, auto_mean))
# add sex info from pedigree
indiv_contribs_A_Z_2013_sex <- left_join(indiv_contribs_A_Z_2013, select(pedigree, Indiv, Sex))
indiv_contribs_A_Z_2013_sex$Sex <- as.factor(indiv_contribs_A_Z_2013_sex$Sex)
# get total number of nestlings in 2013
num_2013_nestlings = filter(num_nestlings_yearly, NatalYear == 2013)$num_nestlings
# filter for descendants born in 2013 and summarize number of 2013 descendants for each founder
# then calculate what proportion of 2013 nestlings that is
descendants_2013_prop_nestlings <- filter(descendants_years, NatalYear == 2013) %>%
group_by(indiv_id) %>%
dplyr::summarize(num_descendants_2013 = n()) %>%
left_join(dplyr::select(breeders_926, Indiv), ., by = c("Indiv" = "indiv_id")) %>%
select(indiv_id = Indiv, num_descendants_2013) %>%
mutate(num_descendants_2013 = ifelse(is.na(num_descendants_2013), 0, num_descendants_2013), total_2013_nestlings = num_2013_nestlings, prop_2013_nestlings = num_descendants_2013/total_2013_nestlings)
# join this data to the individual contributions data
indiv_contribs_prop_nestlings_2013 <- left_join(indiv_contribs_A_Z_2013_sex, descendants_2013_prop_nestlings, by = c("Indiv" = "indiv_id"))
####Pop Level distributions####
#genetic (A & Z) vs. genealogical contributions in 2013 for all 926 breeders
#count of individuals with zero descendants in 2013
sum(indiv_contribs_prop_nestlings_2013$prop_2013_nestlings[indiv_contribs_prop_nestlings_2013$Sex ==1] == 0)
sum(indiv_contribs_prop_nestlings_2013$prop_2013_nestlings[indiv_contribs_prop_nestlings_2013$Sex ==2] == 0)
## genealogical contributions
#range and mean genealogical contributions for males with >0 descendants in 2013
#range and mean genealogical contributions for females with >0 descendants in 2013
###expected genetic contributions
#range and mean expected contributions for males with >0 descendants in 2013 - autosomal & Z
#range and mean expected contributions for females with >0 descendants in 2013 - autosomal & Z
filter(indiv_contribs_prop_nestlings_2013, prop_2013_nestlings != 0) %>%
group_by(Sex) %>%
dplyr::summarize(geno_min = min(prop_2013_nestlings), geno_max = max(prop_2013_nestlings), geno_mean = mean(prop_2013_nestlings),
auto_min = min(auto_mean), auto_max = max(auto_mean), auto_mean = mean(auto_mean),
Z_min = min(Z_mean), Z_max = max(Z_mean), Z_mean = mean(Z_mean))
setwd('~/Documents/GitHub/ZDropping/GeneDropping')
# Read in 1990-2013 breeders data
breeders_926 <- read.table("working_files/926_breeders.txt", header = TRUE, stringsAsFactors = FALSE)
# Read in pedigree
pedigree <- read.table("working_files/pedigree.txt", header = TRUE, sep = " ", stringsAsFactors = FALSE)
# Read in all of the data tables including breeders data
load("all_tables_v2.rdata")
## Genealogical contributions for all breeders
# Make a list of the descendants of every bird
descendants <- NULL
for (i in breeders_926$Indiv) {
generation = 2
thisGen <- filter(pedigree, Mom==i | Dad==i)
repeat {
if (nrow(thisGen)==0){
break
}
thisGenRow <- select(thisGen, Indiv) %>%
transmute(indiv_id = i, descendant_id = Indiv, relationship = generation)
descendants <- rbind(descendants, thisGenRow)
generation = generation + 1
nextGen <- filter(pedigree, Mom %in% thisGen$Indiv | Dad %in% thisGen$Indiv)
thisGen <- nextGen
}
}
# get indiv data including natal years
indiv_data<-read.table('working_files/IndivDataUSFWS.txt',header=TRUE,sep='\t',stringsAsFactors=FALSE)
nestling_data<-select(indiv_data, Indiv, NatalYear)
# add natal year info to descendants dataset
descendants_years <- left_join(descendants, nestling_data, by = c("descendant_id" = "Indiv"))
# how many nestlings are there each year?
num_nestlings_yearly <- group_by(nestling_data, NatalYear) %>%
dplyr::summarize(num_nestlings = n())
# Get 2013 genetic contributions (autosomes and Z) for each individual
# Make a table to save individuals' 2013 contributions in
indiv_contribs_A_Z_2013<-NULL
# Only running this for breeders that actually have kids
breeders_926$Kids <- breeders_926$Indiv %in% c(pedigree$Dad, pedigree$Mom)
# Go through all of the individuals
for (i in breeders_926[breeders_926$Kids,'Indiv']) {
#get autosomal data for individual i
obsIndiv<-read.table(file=paste('working_files/intermediate_files/IndivContrib_',i,'.ped.A.1.drop.data.txt',sep=''),header=TRUE)
simIndiv<-read.table(file=paste('working_files/intermediate_files/IndivContrib_',i,'.ped.A.1.drop.sim.txt',sep=''),header=TRUE)
#make sure number of sims adds up to 1000000
ddply(simIndiv[simIndiv$allele==2,],.(cohort),summarize, sum=sum(all_alleles_count))
for (y in c(0:23)){
if (sum(simIndiv[simIndiv$allele==2 & simIndiv$cohort==y,'all_alleles_count'])<1000000) {
simIndiv<-rbind(simIndiv,cbind(cohort=y,allele=2,allele_count=0,all_alleles_count=1000000-sum(simIndiv[simIndiv$allele==2 & simIndiv$cohort==y,'all_alleles_count'])))
}
}
ddply(simIndiv[simIndiv$allele==2,],.(cohort),summarize, sum=sum(all_alleles_count))
#add year info
simIndiv$Year<-simIndiv$cohort + 1990
#subset data to only include 2013 and allele 2
simIndiv<-simIndiv[simIndiv$allele==2 & simIndiv$Year == 2013,]
#get total number of alleles sampled in 2013
simIndiv$totAlleles<-laply(c(1:nrow(simIndiv)), function(x) unique(obsIndiv[obsIndiv$cohort_year==simIndiv[x,'Year'],'allele_count']))
#summarize data
simIndivSum<-ddply(simIndiv,.(Year),summarize, mean=mean(unlist(rep(allele_count/totAlleles,all_alleles_count))),
q1=quantile(unlist(rep(allele_count/totAlleles,all_alleles_count)),0.025),
q3=quantile(unlist(rep(allele_count/totAlleles,all_alleles_count)),0.975))
#save mean autosomal contribution for 2013
indivauto <- mutate(simIndivSum, Indiv = i) %>%
select(Indiv, auto_mean = mean)
#get Z data for individual i
obsIndiv<-read.table(file=paste('working_files/intermediate_files/IndivContrib_',i,'.ped.Z.1.drop.data.txt',sep=''),header=TRUE)
simIndiv<-read.table(file=paste('working_files/intermediate_files/IndivContrib_',i,'.ped.Z.1.drop.sim.txt',sep=''),header=TRUE)
#make sure number of sims adds up to 1000000
ddply(simIndiv[simIndiv$allele==2,],.(cohort),summarize, sum=sum(all_alleles_count))
for (y in c(0:23)){
if (sum(simIndiv[simIndiv$allele==2 & simIndiv$cohort==y,'all_alleles_count'])<1000000) {
simIndiv<-rbind(simIndiv,cbind(cohort=y,allele=2,allele_count=0,all_alleles_count=1000000-sum(simIndiv[simIndiv$allele==2 & simIndiv$cohort==y,'all_alleles_count'])))
}
}
ddply(simIndiv[simIndiv$allele==2,],.(cohort),summarize, sum=sum(all_alleles_count))
#add year info
simIndiv$Year<-simIndiv$cohort + 1990
#subset data to only include 2013 and allele 2
simIndiv<-simIndiv[simIndiv$allele==2 & simIndiv$Year == 2013,]
#get total number of alleles sampled in 2013
simIndiv$totAlleles<-laply(c(1:nrow(simIndiv)), function(x) unique(obsIndiv[obsIndiv$cohort_year==simIndiv[x,'Year'],'allele_count']))
#summarize data
simIndivSum<-ddply(simIndiv,.(Year),summarize, mean=mean(unlist(rep(allele_count/totAlleles,all_alleles_count))),
q1=quantile(unlist(rep(allele_count/totAlleles,all_alleles_count)),0.025),
q3=quantile(unlist(rep(allele_count/totAlleles,all_alleles_count)),0.975))
#save mean Z contribution for 2013
indivrow <- mutate(simIndivSum, Indiv = i) %>%
select(Indiv, Z_mean = mean) %>%
right_join(indivauto)
# add individual to table
indiv_contribs_A_Z_2013<-rbind(indiv_contribs_A_Z_2013, indivrow)
}
# Add back in breeders with no kids, with 0 contributions
indiv_contribs_A_Z_2013 <- left_join(select(breeders_926, Indiv), indiv_contribs_A_Z_2013) %>%
mutate(Z_mean = ifelse(is.na(Z_mean), 0, Z_mean), auto_mean = ifelse(is.na(auto_mean), 0, auto_mean))
# add sex info from pedigree
indiv_contribs_A_Z_2013_sex <- left_join(indiv_contribs_A_Z_2013, select(pedigree, Indiv, Sex))
indiv_contribs_A_Z_2013_sex$Sex <- as.factor(indiv_contribs_A_Z_2013_sex$Sex)
# get total number of nestlings in 2013
num_2013_nestlings = filter(num_nestlings_yearly, NatalYear == 2013)$num_nestlings
# filter for descendants born in 2013 and summarize number of 2013 descendants for each founder
# then calculate what proportion of 2013 nestlings that is
descendants_2013_prop_nestlings <- filter(descendants_years, NatalYear == 2013) %>%
group_by(indiv_id) %>%
dplyr::summarize(num_descendants_2013 = n()) %>%
left_join(dplyr::select(breeders_926, Indiv), ., by = c("Indiv" = "indiv_id")) %>%
select(indiv_id = Indiv, num_descendants_2013) %>%
mutate(num_descendants_2013 = ifelse(is.na(num_descendants_2013), 0, num_descendants_2013), total_2013_nestlings = num_2013_nestlings, prop_2013_nestlings = num_descendants_2013/total_2013_nestlings)
# join this data to the individual contributions data
indiv_contribs_prop_nestlings_2013 <- left_join(indiv_contribs_A_Z_2013_sex, descendants_2013_prop_nestlings, by = c("Indiv" = "indiv_id"))
####Pop Level distributions####
#genetic (A & Z) vs. genealogical contributions in 2013 for all 926 breeders
#count of individuals with zero descendants in 2013
sum(indiv_contribs_prop_nestlings_2013$prop_2013_nestlings[indiv_contribs_prop_nestlings_2013$Sex ==1] == 0)
sum(indiv_contribs_prop_nestlings_2013$prop_2013_nestlings[indiv_contribs_prop_nestlings_2013$Sex ==2] == 0)
## genealogical contributions
#range and mean genealogical contributions for males with >0 descendants in 2013
#range and mean genealogical contributions for females with >0 descendants in 2013
###expected genetic contributions
#range and mean expected contributions for males with >0 descendants in 2013 - autosomal & Z
#range and mean expected contributions for females with >0 descendants in 2013 - autosomal & Z
filter(indiv_contribs_prop_nestlings_2013, prop_2013_nestlings != 0) %>%
group_by(Sex) %>%
dplyr::summarize(geno_min = min(prop_2013_nestlings), geno_max = max(prop_2013_nestlings), geno_mean = mean(prop_2013_nestlings),
auto_min = min(auto_mean), auto_max = max(auto_mean), auto_mean = mean(auto_mean),
Z_min = min(Z_mean), Z_max = max(Z_mean), Z_mean = mean(Z_mean))
setwd('~/Documents/GitHub/ZDropping/GeneDropping')
library(plyr)
library(dplyr)
library(ggplot2)
library(tidyr)
library(kinship2)
library(cowplot)
#plot theme
plottheme <- theme( axis.line.x = element_line(colour="black",size=0.3), axis.line.y = element_line(colour="black",size=0.3),
axis.ticks = element_line(colour = "black",size=0.2),
axis.text = element_text(colour="black"), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), panel.background = element_rect(fill="white"),
plot.background = element_rect(fill = "white"),
axis.text.x = element_text(size=6), axis.text.y = element_text(size=6),
axis.title = element_text(size=7), plot.title = element_text(size=8),
legend.position="right", legend.text = element_text(size=6),
legend.title = element_text(size=7), legend.key = element_rect(colour=NA,fill=NA), legend.key.size=unit(1,"cm"))
# Read in 1990-2013 breeders data
breeders_926 <- read.table("working_files/926_breeders.txt", header = TRUE, stringsAsFactors = FALSE)
# Read in pedigree
pedigree <- read.table("working_files/pedigree.txt", header = TRUE, sep = " ", stringsAsFactors = FALSE)
# Read in all of the data tables including breeders data
load("all_tables_v2.rdata")
load("/Volumes/GoogleDrive/My Drive/Research/Data2/fsj/databases/all_tables_v2.rdata")
# Make a list of the descendants of every bird
descendants <- NULL
for (i in breeders_926$Indiv) {
generation = 2
thisGen <- filter(pedigree, Mom==i | Dad==i)
repeat {
if (nrow(thisGen)==0){
break
}
thisGenRow <- select(thisGen, Indiv) %>%
transmute(indiv_id = i, descendant_id = Indiv, relationship = generation)
descendants <- rbind(descendants, thisGenRow)
generation = generation + 1
nextGen <- filter(pedigree, Mom %in% thisGen$Indiv | Dad %in% thisGen$Indiv)
thisGen <- nextGen
}
}
# get indiv data including natal years
indiv_data<-read.table('working_files/IndivDataUSFWS.txt',header=TRUE,sep='\t',stringsAsFactors=FALSE)
nestling_data<-select(indiv_data, Indiv, NatalYear)
# add natal year info to descendants dataset
descendants_years <- left_join(descendants, nestling_data, by = c("descendant_id" = "Indiv"))
# how many nestlings are there each year?
num_nestlings_yearly <- group_by(nestling_data, NatalYear) %>%
dplyr::summarize(num_nestlings = n())
# Make a table to save individuals' 2013 contributions in
indiv_contribs_A_Z_2013<-NULL
# Only running this for breeders that actually have kids
breeders_926$Kids <- breeders_926$Indiv %in% c(pedigree$Dad, pedigree$Mom)
# Go through all of the individuals
for (i in breeders_926[breeders_926$Kids,'Indiv']) {
#get autosomal data for individual i
obsIndiv<-read.table(file=paste('working_files/intermediate_files/IndivContrib_',i,'.ped.A.1.drop.data.txt',sep=''),header=TRUE)
simIndiv<-read.table(file=paste('working_files/intermediate_files/IndivContrib_',i,'.ped.A.1.drop.sim.txt',sep=''),header=TRUE)
#make sure number of sims adds up to 1000000
ddply(simIndiv[simIndiv$allele==2,],.(cohort),summarize, sum=sum(all_alleles_count))
for (y in c(0:23)){
if (sum(simIndiv[simIndiv$allele==2 & simIndiv$cohort==y,'all_alleles_count'])<1000000) {
simIndiv<-rbind(simIndiv,cbind(cohort=y,allele=2,allele_count=0,all_alleles_count=1000000-sum(simIndiv[simIndiv$allele==2 & simIndiv$cohort==y,'all_alleles_count'])))
}
}
ddply(simIndiv[simIndiv$allele==2,],.(cohort),summarize, sum=sum(all_alleles_count))
#add year info
simIndiv$Year<-simIndiv$cohort + 1990
#subset data to only include 2013 and allele 2
simIndiv<-simIndiv[simIndiv$allele==2 & simIndiv$Year == 2013,]
#get total number of alleles sampled in 2013
simIndiv$totAlleles<-laply(c(1:nrow(simIndiv)), function(x) unique(obsIndiv[obsIndiv$cohort_year==simIndiv[x,'Year'],'allele_count']))
#summarize data
simIndivSum<-ddply(simIndiv,.(Year),summarize, mean=mean(unlist(rep(allele_count/totAlleles,all_alleles_count))),
q1=quantile(unlist(rep(allele_count/totAlleles,all_alleles_count)),0.025),
q3=quantile(unlist(rep(allele_count/totAlleles,all_alleles_count)),0.975))
#save mean autosomal contribution for 2013
indivauto <- mutate(simIndivSum, Indiv = i) %>%
select(Indiv, auto_mean = mean)
#get Z data for individual i
obsIndiv<-read.table(file=paste('working_files/intermediate_files/IndivContrib_',i,'.ped.Z.1.drop.data.txt',sep=''),header=TRUE)
simIndiv<-read.table(file=paste('working_files/intermediate_files/IndivContrib_',i,'.ped.Z.1.drop.sim.txt',sep=''),header=TRUE)
#make sure number of sims adds up to 1000000
ddply(simIndiv[simIndiv$allele==2,],.(cohort),summarize, sum=sum(all_alleles_count))
for (y in c(0:23)){
if (sum(simIndiv[simIndiv$allele==2 & simIndiv$cohort==y,'all_alleles_count'])<1000000) {
simIndiv<-rbind(simIndiv,cbind(cohort=y,allele=2,allele_count=0,all_alleles_count=1000000-sum(simIndiv[simIndiv$allele==2 & simIndiv$cohort==y,'all_alleles_count'])))
}
}
ddply(simIndiv[simIndiv$allele==2,],.(cohort),summarize, sum=sum(all_alleles_count))
#add year info
simIndiv$Year<-simIndiv$cohort + 1990
#subset data to only include 2013 and allele 2
simIndiv<-simIndiv[simIndiv$allele==2 & simIndiv$Year == 2013,]
#get total number of alleles sampled in 2013
simIndiv$totAlleles<-laply(c(1:nrow(simIndiv)), function(x) unique(obsIndiv[obsIndiv$cohort_year==simIndiv[x,'Year'],'allele_count']))
#summarize data
simIndivSum<-ddply(simIndiv,.(Year),summarize, mean=mean(unlist(rep(allele_count/totAlleles,all_alleles_count))),
q1=quantile(unlist(rep(allele_count/totAlleles,all_alleles_count)),0.025),
q3=quantile(unlist(rep(allele_count/totAlleles,all_alleles_count)),0.975))
#save mean Z contribution for 2013
indivrow <- mutate(simIndivSum, Indiv = i) %>%
select(Indiv, Z_mean = mean) %>%
right_join(indivauto)
# add individual to table
indiv_contribs_A_Z_2013<-rbind(indiv_contribs_A_Z_2013, indivrow)
}
load("/Users/felix/Downloads/tables_for_lms_in_GenContrib_Indiv_plot_fig2.rdata")
####descents vs genes####
#genealogical vs autosomal expected model
A_FM_mod_lm <- lm(auto_mean ~  prop_2013_nestlings*Sex  , data=indiv_contribs_prop_nestlings_2013)
summary(A_FM_mod_lm)
#genealogical vs Z expected model
Z_FM_mod_lm <- lm(Z_mean ~  prop_2013_nestlings*Sex  , data=indiv_contribs_prop_nestlings_2013)
summary(Z_FM_mod_lm)
0.083-0.0426
0.04/0.083
#plot
(A_contribs_vs_descendants <-
ggplot(indiv_contribs_prop_nestlings_2013, aes(x = prop_2013_nestlings, y = auto_mean, color = Sex, fill = Sex)) +
geom_point(alpha = 0.75, size = 0.3)+
geom_smooth(method = "lm", alpha = 0.3, size = 0.5,formula=y~0+x)+
geom_abline(slope = 1, linetype = "dashed", color = "gray") +
scale_color_manual(values = c("cornflowerblue", "indianred1"))+
scale_fill_manual(values = c("cornflowerblue", "indianred1"))+
labs(x = "Genealogical contribution in 2013", y = "Autosomal expected \ngenetic contrib. in 2013")+
plottheme+
theme(legend.position = "none", plot.margin = unit(c(15,5.5,5.5,5.5), "pt")) +
ylim(0,0.04))
(Z_contribs_vs_descendants <-
ggplot(indiv_contribs_prop_nestlings_2013, aes(x = prop_2013_nestlings, y = Z_mean, color = Sex, fill = Sex)) +
geom_point(alpha = 0.75, size = 0.3)+
geom_smooth(method = "lm", alpha = 0.3, size = 0.5,formula=y~0+x)+
geom_abline(slope = 1,  linetype = "dashed", color = "gray") +
scale_color_manual(values = c("cornflowerblue", "indianred1"))+
scale_fill_manual(values = c("cornflowerblue", "indianred1"))+
labs(x = "Genealogical contribution in 2013", y = "Z expected genetic contrib. in 2013")+
plottheme+
theme(legend.position = "none", plot.margin = unit(c(15,5.5,5.5,5.5), "pt")) +
ylim(0,0.04))
(A_vs_Z_contribs <-
ggplot(indiv_contribs_A_Z_2013_sex, aes(x = auto_mean, y = Z_mean)) +
geom_abline(slope = 1,  linetype = "dashed", color = "gray", size = 0.5) +
geom_abline(slope = (2/1)*(1/3),  linetype = "dashed", color = "indianred1", size = 0.5) +
geom_abline(slope = (2/1)*(2/3),  linetype = "dashed", color = "cornflowerblue", size = 0.5) +
geom_point(aes(color = Sex), alpha = 0.75, size = 0.3)+
geom_smooth(method = "lm", alpha = 0.3, size = 0.5,color="black",formula=y~0+x)+
geom_smooth(method = "lm", alpha = 0.3, size = 0.5, aes(color = Sex),formula=y~0+x)+
guides(color=FALSE)+
scale_color_manual(values = c("cornflowerblue", "indianred1"))+
scale_fill_manual(values = c("cornflowerblue", "indianred1"))+
labs(x = "Autosomal expected \ngenetic contrib. in 2013", y = "Z expected genetic contrib. in 2013")+
plottheme +
ylim(0,0.04))
plot_grid(A_contribs_vs_descendants, Z_contribs_vs_descendants, A_vs_Z_contribs,  ncol = 3, labels = "AUTO", align = 'hv',axis='tblr')
AZ_mod <- lm(Z_mean ~  auto_mean  , data=indiv_contribs_A_Z_2013_sex)
summary(AZ_mod)
AZ_mod <- lm(Z_mean ~  auto_mean + 0  , data=indiv_contribs_A_Z_2013_sex)
summary(AZ_mod)
AZ_mods_sex <- lm(Z_mean ~  auto_mean*Sex + 0 , data=indiv_contribs_A_Z_2013_sex)
summary(AZ_mods_sex)
0.001901 - 0.001621
0.00028 / 0.001621
1.245 - 0.5703
0.6747 / 1.25
4/3
load("/Users/felix/Downloads/GenContrib_Imm_plot_fig3_20211005.rdata")
library(dplyr)
library(ggplot2)
library(cowplot)
library(tidyr)
library(forcats)
# plot theme
plottheme <- theme( axis.line.x = element_line(colour="black",size=0.3), axis.line.y = element_line(colour="black",size=0.3),
axis.ticks = element_line(colour = "black",size=0.2),
axis.text = element_text(colour="black"), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), panel.background = element_rect(fill="white"),
plot.background = element_rect(fill = "white"),
axis.text.x = element_text(size=6), axis.text.y = element_text(size=6),
axis.title = element_text(size=7), plot.title = element_text(size=8),
legend.position="right", legend.text = element_text(size=7),
legend.title = element_text(size=8), legend.key = element_rect(colour=NA,fill=NA), legend.key.size=unit(1,"cm"))
# Read in pedigree
pedigree <- read.table("working_files/pedigree.txt", header = TRUE, sep = " ", stringsAsFactors = FALSE)
# Read in immigrant cohort data
indivdata <- read.table("working_files/IndivDataUSFWS.txt", header = TRUE, sep = "\t", stringsAsFactors = FALSE)
# just need immigrant cohorts
immdata <- dplyr::select(indivdata, Indiv, ImmCohort)
# And join the immigrant cohorts to the pedigree
pedigree_immdata <- left_join(pedigree, immdata, by = "Indiv")
# Figure out which imms end up breeding
pedigree_immdata_breeder_nonbreeder_imms <- filter(pedigree_immdata, !is.na(ImmCohort)) %>%
mutate(does_breed = ifelse(Indiv %in% pedigree_immdata$Dad, TRUE,
ifelse(Indiv %in% pedigree_immdata$Mom, TRUE, FALSE)))
# Now count up how many imms that end up breeding or not come in each year
pedigree_immdata_breeder_nonbreeder_imms_count <- group_by(pedigree_immdata_breeder_nonbreeder_imms, ImmCohort, Sex, does_breed) %>%
dplyr::summarize(num_imms = n()) %>%
complete(ImmCohort, Sex, does_breed, fill = list(num_imms = 0)) %>%
filter(!is.na(ImmCohort))
pedigree_immdata_breeder_nonbreeder_imms_perc <- pedigree_immdata_breeder_nonbreeder_imms_count %>%
group_by( ImmCohort,does_breed) %>% transmute(Sex, percent = num_imms/sum(num_imms))
# make males negative
pedigree_immdata_breeder_nonbreeder_imms_count_males_negative <- mutate(pedigree_immdata_breeder_nonbreeder_imms_count, num_imms_males_negative = ifelse(Sex==1, -num_imms, num_imms))
# combo plot
# plot sexed birds
(sexed_breed_nonbreed <- ggplot(filter(pedigree_immdata_breeder_nonbreeder_imms_count_males_negative, Sex != 0)) +
geom_bar(aes(x = ImmCohort, y= num_imms_males_negative, fill = interaction(does_breed, Sex)), position = "stack", stat = "identity", alpha = 0.75) +
scale_fill_manual(values = c("lightskyblue1", "cornflowerblue", "mistyrose", "indianred1")) +
labs(x = "", y = "Number of immigrants") +
plottheme +
scale_y_continuous(breaks = c(-30, -20, -10, 0, 10, 20, 30, 40, 50), labels = c(30, 20, 10, 0, 10, 20, 30, 40, 50)) +
theme(legend.position = "none", plot.margin=unit(c(0.2,0.1,0,0.15),'cm'), axis.text.x = element_blank(), axis.ticks.x = element_blank(), axis.line.x = element_blank()))
# plot unsexed birds
(unsexed_breed_nonbreed <- ggplot(filter(pedigree_immdata_breeder_nonbreeder_imms_count_males_negative, Sex == 0)) +
geom_bar(aes(x = ImmCohort, y= num_imms_males_negative, fill = interaction(does_breed, Sex)), position = "stack", stat = "identity", alpha = 0.75) +
scale_fill_manual(values = c("gray85")) +
labs(x = "Year", y = "") +
plottheme +
scale_y_continuous(breaks = c(0, 10, 20)) +
theme(legend.position = "none", plot.margin=unit(c(0.2,0.1,0,0.15),'cm')))
# plot to make a legend
for_legend <- mutate(pedigree_immdata_breeder_nonbreeder_imms_count_males_negative, fill_group = paste(does_breed, Sex, sep = "."))
for_legend$fill_group <- factor(for_legend$fill_group, levels = c("FALSE.2", "FALSE.1", "FALSE.0", "TRUE.2", "TRUE.1"))
(plot_for_legend <- ggplot(for_legend) +
geom_bar(aes(x = ImmCohort, y= num_imms_males_negative, fill = fill_group), position = "stack", stat = "identity", alpha = 0.75) +
scale_fill_manual(values = c("mistyrose", "lightskyblue1", "gray85", "indianred1", "cornflowerblue"), labels = c("Female\nnonbreeder", "Male\nnonbreeder", "Unsexed\nnonbreeder", "Female\nbreeder", "Male\nbreeder")) +
labs(fill = "") +
plottheme +
theme(legend.key.size = unit(0.7,"cm"), legend.position = "top"))
sexed_unsexed_breed_nonbreed_legend <- get_legend(plot_for_legend)
# combine
sexed_unsexed_breed_nonbreed_plot <- plot_grid(sexed_breed_nonbreed, unsexed_breed_nonbreed, ncol = 1, nrow = 2, rel_heights = c(0.8, 0.25), align = "v")
sexed_unsexed_breed_nonbreed_plot_w_legend <- plot_grid(sexed_unsexed_breed_nonbreed_plot, sexed_unsexed_breed_nonbreed_legend, ncol = 2, nrow = 1, rel_widths = c(0.8, 0.25))
pedigree_immdata_breeder_nonbreeder_imms_count_males_negative
pedigree_immdata_breeder_nonbreeder_imms_count
pedigree_immdata
pedigree_immdata_breeder_nonbreeder_imms_perc
pedigree_immdata_breeder_nonbreeder_imms
pedigree_immdata_breeder_nonbreeder_imms_count
lm(data=pedigree_immdata_breeder_nonbreeder_imms_count, num_imms ~ Sex + ImmCohort)
immigrating_lm <- lm(data=pedigree_immdata_breeder_nonbreeder_imms_count, num_imms ~ Sex + ImmCohort)
summary(immigrating_lm)
all_years_alleles <- data.frame(year = rep(c(1990:2013), each = 2), allele = rep(c(2,3), times = length(c(1990:2013))))
# Read in data
obsImmA <- read.table('working_files/intermediate_files/ImmContribAll_prop_male_1_A.1.drop.data.txt', header=TRUE)
# Add a column for year to the sim data
simImmA <- mutate(simImmA, year = cohort + 1990)
load("/Users/felix/Downloads/GenContrib_Imm_plot_fig3_20211005.rdata")
# Add a column for year to the sim data
simImmA <- mutate(simImmA, year = cohort + 1990)
# plot
(A_imm_gen_contribs <-
ggplot(simsumImmA_from1990) +
geom_ribbon(aes(x = year, ymin = q1, ymax = q3, fill = as.factor(allele)), alpha=0.3) +
geom_line(aes(x = year, y = mean, col = as.factor(allele)), size=0.5) +
labs(x = "Year", y = "Autosomal expected genetic contrib.") +
scale_y_continuous(limits = c(0, 0.55), breaks = seq(0,0.5,by=0.1)) +
scale_color_manual(values = c("cornflowerblue", "indianred1")) +
scale_fill_manual(values = c("cornflowerblue", "indianred1")) +
plottheme +
theme(legend.position='none',plot.margin=unit(c(0.2,0.1,0,0.15),'cm')))
A_imm_gen_contribs
simsumImmA_from1990
#cumulative immigration proportion
simsumImmA_from1990$mean[simsumImmA_from1990$year == "2013" & simsumImmA_from1990$allele == 2] +
simsumImmA_from1990$mean[simsumImmA_from1990$year == "2013" & simsumImmA_from1990$allele == 3]
simsumImmA_from1990$mean[simsumImmA_from1990$year == "2013" & simsumImmA_from1990$allele == 2]
simsumImmA_from1990$mean[simsumImmA_from1990$year == "2013" & simsumImmA_from1990$allele == 3]
simsumImmA_from1990$mean[simsumImmA_from1990$year == "2013" & simsumImmA_from1990$allele == 3]/
(  simsumImmA_from1990$mean[simsumImmA_from1990$year == "2013" & simsumImmA_from1990$allele == 2] +
simsumImmA_from1990$mean[simsumImmA_from1990$year == "2013" & simsumImmA_from1990$allele == 3]  )
# plot
(Z_imm_gen_contribs <-
ggplot(simsumImmZ_from1990) +
geom_ribbon(aes(x = year, ymin = q1, ymax = q3, fill = as.factor(allele)), alpha=0.3) +
geom_line(aes(x = year, y = mean, col = as.factor(allele)), size=0.5) +
labs(x = "Year", y = "Z expected genetic contrib.") +
scale_y_continuous(limits = c(0, 0.55), breaks = seq(0,0.5,by=0.1)) +
scale_color_manual(values = c("cornflowerblue", "indianred1")) +
scale_fill_manual(values = c("cornflowerblue", "indianred1")) +
plottheme +
theme(legend.position='none',plot.margin=unit(c(0.2,0.1,0,0.15),'cm')))
#cumulative immigration proportion
simsumImmZ_from1990$mean[simsumImmZ_from1990$year == "2013" & simsumImmZ_from1990$allele == 2] +
simsumImmZ_from1990$mean[simsumImmZ_from1990$year == "2013" & simsumImmZ_from1990$allele == 3]
simsumImmZ_from1990$mean[simsumImmZ_from1990$year == "2013" & simsumImmZ_from1990$allele == 3]/
(  simsumImmZ_from1990$mean[simsumImmZ_from1990$year == "2013" & simsumImmZ_from1990$allele == 2] +
simsumImmZ_from1990$mean[simsumImmZ_from1990$year == "2013" & simsumImmZ_from1990$allele == 3]  )
# plot
(A_imm_contribs_vs_cohort_size <- ggplot(simsumImmYrAplus15, aes(x=num_imms, y=mean, color=Sex)) +
geom_point(show.legend = FALSE) +
geom_linerange(aes(ymin=q1, ymax=q3), show.legend = FALSE) +
geom_smooth(method = "lm", aes(fill = Sex), alpha = 0.25, size = 0.5) +
scale_color_manual(values = c("indianred1", "cornflowerblue")) +
scale_fill_manual(values = c("indianred1", "cornflowerblue")) +
labs(x="Size of immigrant cohort, sex-specific \n(number of birds of the specified sex)", y="Autosomal expected genetic \ncontrib. after 15 years") +
plottheme +
guides(color=guide_legend(override.aes=list(color=NA))) +
theme(legend.position = "none",plot.margin=unit(c(0.2,0.1,0,0.15),'cm')))
lm(data=simsumImmYrAplus15, mean ~ num_imms + Sex)
simsumImmYrAplus15_lm <- lm(data=simsumImmYrAplus15, mean ~ num_imms + Sex)
summary(simsumImmYrAplus15_lm)
# plot
(Z_imm_contribs_vs_cohort_size <- ggplot(simsumImmYrZplus15, aes(x=num_imms, y=mean, color=Sex)) +
geom_point(show.legend = FALSE) +
geom_linerange(aes(ymin=q1, ymax=q3), show.legend = FALSE) +
geom_smooth(method = "lm", aes(fill = Sex), alpha = 0.25, size = 0.5) +
scale_color_manual(values = c("indianred1", "cornflowerblue")) +
scale_fill_manual(values = c("indianred1", "cornflowerblue")) +
labs(x="Size of immigrant cohort, sex-specific \n(number of birds of the specified sex)", y="Z expected genetic \ncontrib. after 15 years") +
plottheme +
guides(color=guide_legend(override.aes=list(color=NA))) +
theme(legend.position = "none",plot.margin=unit(c(0.2,0.1,0,0.15),'cm')))
simsumImmYrZplus15 <- bind_rows(simsumImmYrZFplus15, simsumImmYrZMplus15) %>%
left_join(num_MF_imms_per_cohort, by = c("ImmCohort", "Sex")) %>%
mutate(Sex = ifelse(Sex == 1, "M", "F"))
# plot
(Z_imm_contribs_vs_cohort_size <- ggplot(simsumImmYrZplus15, aes(x=num_imms, y=mean, color=Sex)) +
geom_point(show.legend = FALSE) +
geom_linerange(aes(ymin=q1, ymax=q3), show.legend = FALSE) +
geom_smooth(method = "lm", aes(fill = Sex), alpha = 0.25, size = 0.5) +
scale_color_manual(values = c("indianred1", "cornflowerblue")) +
scale_fill_manual(values = c("indianred1", "cornflowerblue")) +
labs(x="Size of immigrant cohort, sex-specific \n(number of birds of the specified sex)", y="Z expected genetic \ncontrib. after 15 years") +
plottheme +
guides(color=guide_legend(override.aes=list(color=NA))) +
theme(legend.position = "none",plot.margin=unit(c(0.2,0.1,0,0.15),'cm')))
#get total number of alleles sampled each year
simImmYrZF$totAlleles<-laply(c(1:length(simImmYrZF$cohort)), function(x) unique(obsImmYrZ[obsImmYrZ$cohort_year==simImmYrZF[x,'Year'],'allele_count']))
#get total number of alleles sampled each year
simImmYrZF$totAlleles<-lapply(c(1:length(simImmYrZF$cohort)), function(x) unique(obsImmYrZ[obsImmYrZ$cohort_year==simImmYrZF[x,'Year'],'allele_count']))
simImmYrZ
simsumImmYrZFplus15
#get total number of alleles sampled each year
simImmYrZM$totAlleles<-laply(c(1:length(simImmYrZM$cohort)), function(x) unique(obsImmYrZ[obsImmYrZ$cohort_year==simImmYrZM[x,'Year'],'allele_count']))
#get total number of alleles sampled each year
simImmYrZM$totAlleles<-lapply(c(1:length(simImmYrZM$cohort)), function(x) unique(obsImmYrZ[obsImmYrZ$cohort_year==simImmYrZM[x,'Year'],'allele_count']))
simsumImmYrZplus15
load("/Users/felix/Downloads/simsumImmYrZplus15.rdata")
simsumImmYrAplus15_lm <- lm(data=simsumImmYrZplus15, mean ~ num_imms + Sex)
summary(simsumImmYrAplus15_lm)
0.0015944 * 0.0193867
# plot
(Z_imm_contribs_vs_cohort_size <- ggplot(simsumImmYrZplus15, aes(x=num_imms, y=mean, color=Sex)) +
geom_point(show.legend = FALSE) +
geom_linerange(aes(ymin=q1, ymax=q3), show.legend = FALSE) +
geom_smooth(method = "lm", aes(fill = Sex), alpha = 0.25, size = 0.5) +
scale_color_manual(values = c("indianred1", "cornflowerblue")) +
scale_fill_manual(values = c("indianred1", "cornflowerblue")) +
labs(x="Size of immigrant cohort, sex-specific \n(number of birds of the specified sex)", y="Z expected genetic \ncontrib. after 15 years") +
plottheme +
guides(color=guide_legend(override.aes=list(color=NA))) +
theme(legend.position = "none",plot.margin=unit(c(0.2,0.1,0,0.15),'cm')))
0.0193867/0.0015944
