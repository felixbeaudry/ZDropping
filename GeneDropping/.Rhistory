load("/Users/felix/Google Drive/Research/Manuscripts/ZDropping_all/rose_files/indivGenContrib.rdata")
View(dead2013age1)
library(plyr)
library(dplyr)
library(ggplot2)
library(tidyr)
library(kinship2)
library(cowplot)
library(gridGraphics)
# Plot theme
plottheme <- theme( axis.line.x = element_line(colour="black",size=0.3), axis.line.y = element_line(colour="black",size=0.3),
axis.ticks = element_line(colour = "black",size=0.2),
axis.text = element_text(colour="black"), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), panel.background = element_rect(fill="white"),
plot.background = element_rect(fill = "white"),
axis.text.x = element_text(size=6), axis.text.y = element_text(size=6),
axis.title = element_text(size=7), plot.title = element_text(size=8),
legend.position="right", legend.text = element_text(size=7),
legend.title = element_text(size=8), legend.key = element_rect(colour=NA,fill=NA), legend.key.size=unit(1,"cm"))
library(plyr)
library(dplyr)
library(ggplot2)
library(tidyr)
library(kinship2)
library(cowplot)
# load Rdata file
setwd('~/Google Drive/Research/Data2/fsj/ZDropping_all/')
load("plotIndivGenContrib_tidy_20190529.Rdata") # code to produce all of these tables from raw data is in plotIndivGenContrib_tidy_20190425.R
#plot theme
plottheme <- theme( axis.line.x = element_line(colour="black",size=0.3), axis.line.y = element_line(colour="black",size=0.3),
axis.ticks = element_line(colour = "black",size=0.2),
axis.text = element_text(colour="black"), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), panel.background = element_rect(fill="white"),
plot.background = element_rect(fill = "white"),
axis.text.x = element_text(size=6), axis.text.y = element_text(size=6),
axis.title = element_text(size=7), plot.title = element_text(size=8),
legend.position="right", legend.text = element_text(size=7),
legend.title = element_text(size=8), legend.key = element_rect(colour=NA,fill=NA), legend.key.size=unit(1,"cm"))
load("/Users/felix/Google Drive/Research/Manuscripts/ZDropping_all/rose_files/indivGenContrib.rdata")
library(plyr)
library(dplyr)
library(ggplot2)
library(tidyr)
library(kinship2)
library(cowplot)
library(gridGraphics)
# Plot theme
plottheme <- theme( axis.line.x = element_line(colour="black",size=0.3), axis.line.y = element_line(colour="black",size=0.3),
axis.ticks = element_line(colour = "black",size=0.2),
axis.text = element_text(colour="black"), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), panel.background = element_rect(fill="white"),
plot.background = element_rect(fill = "white"),
axis.text.x = element_text(size=6), axis.text.y = element_text(size=6),
axis.title = element_text(size=7), plot.title = element_text(size=8),
legend.position="right", legend.text = element_text(size=7),
legend.title = element_text(size=8), legend.key = element_rect(colour=NA,fill=NA), legend.key.size=unit(1,"cm"))
# Read in 1990-2013 breeders data
load("indivGenContrib.rdata")
# Read in and tidy pedigree
ped <- read.table("FSJpedgeno_Zsexlinked.ped", header = FALSE, sep = " ", stringsAsFactors = FALSE)
# Read in and tidy pedigree
ped <- read.table("FSJpedgeno_Zsexlinked.ped", header = FALSE, sep = " ", stringsAsFactors = FALSE)
# Read in and tidy pedigree
ped <- read.table("FSJpedgeno_Zsexlinked.ped", header = FALSE, sep = " ", stringsAsFactors = FALSE)
# Read in and tidy pedigree
ped <- read.table("FSJpedgeno_Zsexlinked.ped", header = FALSE, sep = " ", stringsAsFactors = FALSE)
# Read in and tidy pedigree
ped <- read.table("FSJpedgeno_Zsexlinked.ped", header = FALSE, sep = " ", stringsAsFactors = FALSE)
pedigree <- ped[,1:6]
colnames(pedigree) <- c("Fam", "Indiv", "Dad", "Mom", "Sex", "Pheno")
# Read in all of the data tables including breeders data
load("all_tables_v2.rdata")
# Based on the pedigree, make a list of the descendants of every breeder we'll be looking at
descendants <- NULL
for (i in dead2013age1$USFWS) {
generation = 2
thisGen <- filter(pedigree, Mom==i | Dad==i)
repeat {
if (nrow(thisGen)==0){
break
}
thisGenRow <- select(thisGen, Indiv) %>%
transmute(indiv_id = i, descendant_id = Indiv, relationship = generation)
descendants <- rbind(descendants, thisGenRow)
generation = generation + 1
nextGen <- filter(pedigree, Mom %in% thisGen$Indiv | Dad %in% thisGen$Indiv)
thisGen <- nextGen
}
}
# Read in data on individuals including natal years
indiv_data<-read.table('IndivDataUSFWS.txt',header=TRUE,sep='\t',stringsAsFactors=FALSE)
nestling_data<-select(indiv_data, Indiv, NatalYear)
# add natal year info to descendants dataset
descendants_years <- left_join(descendants, nestling_data, by = c("descendant_id" = "Indiv"))
# how many nestlings are there each year?
num_nestlings_yearly <- group_by(nestling_data, NatalYear) %>%
dplyr::summarize(num_nestlings = n())
# The pair is:
m<-"1513-50363"
f<-"1043-90505"
# make a table for this pair's genealogical contributions by year
# fill out the years where they don't have nestlings with 0s
filter(descendants_years, indiv_id == "1513-50363") %>%
group_by(NatalYear) %>%
dplyr::summarize(num_descendants = n()) %>%
right_join(num_nestlings_yearly) %>%
mutate(num_descendants = ifelse(is.na(num_descendants), 0, num_descendants),
prop_nestlings = num_descendants/num_nestlings) -> genealogical_contribs_by_year
# Get a list of all the individuals we want in this pedigree
# they have all the same descendants so we can just get one's descendants
focal_family <- filter(descendants, indiv_id == f)
# add the two focal individuals to the list
focal_family_indivs <- c(m, f, focal_family$descendant_id)
# Get the pedigree data for this family and modify it a bit for the plot
focal_family_insiders <- filter(pedigree, Indiv %in% focal_family_indivs) %>%
select(Indiv, Dad, Mom, Sex) %>%
mutate(Mom = ifelse(Indiv==m | Indiv==f, NA, Mom), Dad = ifelse(Indiv==m | Indiv == f, NA, Dad))
# Also need the second parent for individuals who have only 1 parent in this tree (make these founders)
focal_family_outsiders <- filter(pedigree, Indiv %in% focal_family_insiders$Mom |
Indiv %in% focal_family_insiders$Dad, !(Indiv %in% focal_family_indivs)) %>%
mutate(Mom = NA, Dad = NA)
# Add those extra parents/outsiders to the family pedigree
focal_family_ped <- bind_rows(focal_family_insiders, focal_family_outsiders) %>%
mutate(Sex = ifelse(Sex==0, 3, Sex)) %>%
select(Indiv, Dad, Mom, Sex)
# We will also need a status variable that says whether the indiv is alive in 2013
# Get last observation for each indiv
focal_family_ped_status <- filter(all.obs, USFWS %in% focal_family_ped$Indiv) %>%
group_by(USFWS) %>%
dplyr::summarize(last_year = max(Year)) %>%
mutate(Status = ifelse(last_year > 2013, 1, 0)) %>%
select(Indiv = USFWS, Status) %>%
right_join(focal_family_ped)
# Draw the pedigree w/ kinship2 package
focal_family_ped_to_plot <- with(focal_family_ped_status[,c(1,3:5,2)], pedigree(Indiv, Dad, Mom, Sex, Status))
plot(focal_family_ped_to_plot, id=rep("", times = nrow(focal_family_ped)), symbolsize = 1)
# use recordPlot() to capture the base R plot in a variable
mated_pair_ped <- recordPlot()
#get autosomal expected genetic contribution data for the male
obsIndivMA<-read.table(file=paste('IndivContrib_',m,'.ped.A.1.drop.data.txt',sep=''),header=TRUE)
simIndivMA<-read.table(file=paste('IndivContrib_',m,'.ped.A.1.drop.sim.txt',sep=''),header=TRUE)
#make sure number of simulations adds up to 1000000
ddply(simIndivMA[simIndivMA$allele==2,],.(cohort),summarize, sum=sum(all_alleles_count))
for (y in c(0:23)){
if (sum(simIndivMA[simIndivMA$allele==2 & simIndivMA$cohort==y,'all_alleles_count'])<1000000) {
simIndivMA<-rbind(simIndivMA,cbind(cohort=y,allele=2,allele_count=0,all_alleles_count=1000000-sum(simIndivMA[simIndivMA$allele==2 & simIndivMA$cohort==y,'all_alleles_count'])))
}
}
ddply(simIndivMA[simIndivMA$allele==2,],.(cohort),summarize, sum=sum(all_alleles_count))
library(plyr)
library(dplyr)
library(ggplot2)
library(tidyr)
library(kinship2)
library(cowplot)
# load Rdata file
setwd('~/Document/GitHub/ZDropping/')
# read in pedigree
pedigree <- read.table("working_files/pedigree.txt", header = TRUE, stringsAsFactors = FALSE)
# squish pedigree to get sex ratio of moms' offspring, then combine with indiv contribs
# get rid of entries where mom is unknown
indiv_contribs_offspring_sex_ratio <- filter(pedigree, Mom != "0") %>%
# group by mom and sex
group_by(Mom, Sex) %>%
# get number of offspring of each sex for each mom
dplyr::summarize(num_offspring = n()) %>%
# remove unsexed offspring as we can't do anything with these
filter(Sex != 0) %>%
# make sons and daughters into separate columns so that we can work with them
pivot_wider(id_cols = Mom, names_from = Sex, names_prefix = "num_offspring_", values_from = num_offspring) %>%
# calculate sex ratio: prop male offspring
mutate(prop_males = num_offspring_1/(num_offspring_1+num_offspring_2)) %>%
# pull out just the moms' IDs and sex ratios
select(Indiv = Mom, prop_males) %>%
# combine with indiv contribs data
left_join(indiv_contribs_prop_nestlings_2013, .)
load("working_files/intermediate_files/plotIndivGenContrib_tidy_20190529.Rdata") # code to produce all of these tables from raw data is in plotIndivGenContrib_tidy_20190425.R
# squish pedigree to get sex ratio of moms' offspring, then combine with indiv contribs
# get rid of entries where mom is unknown
indiv_contribs_offspring_sex_ratio <- filter(pedigree, Mom != "0") %>%
# group by mom and sex
group_by(Mom, Sex) %>%
# get number of offspring of each sex for each mom
dplyr::summarize(num_offspring = n()) %>%
# remove unsexed offspring as we can't do anything with these
filter(Sex != 0) %>%
# make sons and daughters into separate columns so that we can work with them
pivot_wider(id_cols = Mom, names_from = Sex, names_prefix = "num_offspring_", values_from = num_offspring) %>%
# calculate sex ratio: prop male offspring
mutate(prop_males = num_offspring_1/(num_offspring_1+num_offspring_2)) %>%
# pull out just the moms' IDs and sex ratios
select(Indiv = Mom, prop_males) %>%
# combine with indiv contribs data
left_join(indiv_contribs_prop_nestlings_2013, .)
# plot
ggplot(indiv_contribs_offspring_sex_ratio, aes(x = prop_males, y = Z_mean, color = Sex, fill = Sex)) +
geom_point(alpha = 0.75, size = 0.3)+
geom_smooth(method = "lm", alpha = 0.3, size = 0.5)+
scale_color_manual(values = c("cornflowerblue", "indianred1"))+
scale_fill_manual(values = c("cornflowerblue", "indianred1"))+
labs(x = "Offspring sex ratio (proportion male)", y = "Z expected genetic contrib. in 2013")+
plottheme+
theme(legend.position = "none", plot.margin = unit(c(15,5.5,5.5,5.5), "pt")) +
ylim(c(0,0.025)) +
scale_x_continuous(limits = c(0, 1), breaks = c(0, 0.25, 0.33, 0.5, 0.66, 0.75, 1))
#plot theme
plottheme <- theme( axis.line.x = element_line(colour="black",size=0.3), axis.line.y = element_line(colour="black",size=0.3),
axis.ticks = element_line(colour = "black",size=0.2),
axis.text = element_text(colour="black"), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), panel.background = element_rect(fill="white"),
plot.background = element_rect(fill = "white"),
axis.text.x = element_text(size=6), axis.text.y = element_text(size=6),
axis.title = element_text(size=7), plot.title = element_text(size=8),
legend.position="right", legend.text = element_text(size=7),
legend.title = element_text(size=8), legend.key = element_rect(colour=NA,fill=NA), legend.key.size=unit(1,"cm"))
# plot
ggplot(indiv_contribs_offspring_sex_ratio, aes(x = prop_males, y = Z_mean, color = Sex, fill = Sex)) +
geom_point(alpha = 0.75, size = 0.3)+
geom_smooth(method = "lm", alpha = 0.3, size = 0.5)+
scale_color_manual(values = c("cornflowerblue", "indianred1"))+
scale_fill_manual(values = c("cornflowerblue", "indianred1"))+
labs(x = "Offspring sex ratio (proportion male)", y = "Z expected genetic contrib. in 2013")+
plottheme+
theme(legend.position = "none", plot.margin = unit(c(15,5.5,5.5,5.5), "pt")) +
ylim(c(0,0.025)) +
scale_x_continuous(limits = c(0, 1), breaks = c(0, 0.25, 0.33, 0.5, 0.66, 0.75, 1))
#count of individuals with zero descendants in 2013
length(is.na(indiv_contribs_prop_nestlings_2013$prop_2013_nestlings[indiv_contribs_prop_nestlings_2013$Sex ==1]))
length(is.na(indiv_contribs_prop_nestlings_2013$prop_2013_nestlings[indiv_contribs_prop_nestlings_2013$Sex ==2]))
## genealogical contributions
#range and mean genealogical contributions for males with >0 descendants in 2013
min(na.omit(indiv_contribs_prop_nestlings_2013$prop_2013_nestlings[indiv_contribs_prop_nestlings_2013$Sex ==1]))
max(na.omit(indiv_contribs_prop_nestlings_2013$prop_2013_nestlings[indiv_contribs_prop_nestlings_2013$Sex ==1]))
mean(na.omit(indiv_contribs_prop_nestlings_2013$prop_2013_nestlings[indiv_contribs_prop_nestlings_2013$Sex ==1]))#males
#range and mean genealogical contributions for females with >0 descendants in 2013
min(na.omit(indiv_contribs_prop_nestlings_2013$prop_2013_nestlings[indiv_contribs_prop_nestlings_2013$Sex ==2]))
max(na.omit(indiv_contribs_prop_nestlings_2013$prop_2013_nestlings[indiv_contribs_prop_nestlings_2013$Sex ==2]))
mean(na.omit(indiv_contribs_prop_nestlings_2013$prop_2013_nestlings[indiv_contribs_prop_nestlings_2013$Sex ==2]))#females
###expected genetic contributions
##Autosomal
#range and mean expected contributions for males with >0 descendants in 2013
min(na.omit(indiv_contribs_prop_nestlings_2013$auto_mean[indiv_contribs_prop_nestlings_2013$Sex ==1 & !is.na(indiv_contribs_prop_nestlings_2013$num_descendants_2013)]))
max(na.omit(indiv_contribs_prop_nestlings_2013$auto_mean[indiv_contribs_prop_nestlings_2013$Sex ==1]))
mean(na.omit(indiv_contribs_prop_nestlings_2013$auto_mean[indiv_contribs_prop_nestlings_2013$Sex ==1]))#males
#range and mean expected contributions for females with >0 descendants in 2013
min(na.omit(indiv_contribs_prop_nestlings_2013$auto_mean[indiv_contribs_prop_nestlings_2013$Sex ==2 & !is.na(indiv_contribs_prop_nestlings_2013$num_descendants_2013)]))
max(na.omit(indiv_contribs_prop_nestlings_2013$auto_mean[indiv_contribs_prop_nestlings_2013$Sex ==2]))
mean(na.omit(indiv_contribs_prop_nestlings_2013$auto_mean[indiv_contribs_prop_nestlings_2013$Sex ==2]))#females
##Z
#males
min(na.omit(indiv_contribs_prop_nestlings_2013$Z_mean[indiv_contribs_prop_nestlings_2013$Sex ==1 & !is.na(indiv_contribs_prop_nestlings_2013$num_descendants_2013) ]))
max(na.omit(indiv_contribs_prop_nestlings_2013$Z_mean[indiv_contribs_prop_nestlings_2013$Sex ==1]))
mean(na.omit(indiv_contribs_prop_nestlings_2013$Z_mean[indiv_contribs_prop_nestlings_2013$Sex ==1]))#males
#females
min(na.omit(indiv_contribs_prop_nestlings_2013$Z_mean[indiv_contribs_prop_nestlings_2013$Sex ==2 & !is.na(indiv_contribs_prop_nestlings_2013$num_descendants_2013)]))
max(na.omit(indiv_contribs_prop_nestlings_2013$Z_mean[indiv_contribs_prop_nestlings_2013$Sex ==2]))
mean(na.omit(indiv_contribs_prop_nestlings_2013$Z_mean[indiv_contribs_prop_nestlings_2013$Sex ==2]))#females
####descents vs genes####
#genealogical vs autosomal expected model
A_FM_mod_lm <- lm(auto_mean ~  prop_2013_nestlings*Sex  , data=indiv_contribs_prop_nestlings_2013)
summary(A_FM_mod_lm)
#genealogical vs Z expected model
Z_FM_mod_lm <- lm(Z_mean ~  prop_2013_nestlings*Sex  , data=indiv_contribs_prop_nestlings_2013)
summary(Z_FM_mod_lm)
-0.0327305/0.0539405 #sex effect
AZ_mod <- lm(Z_mean ~  auto_mean  , data=indiv_contribs_A_Z_2013_sex)
summary(AZ_mod)
AZ_mods_sex <- lm(Z_mean ~  auto_mean*Sex  , data=indiv_contribs_A_Z_2013_sex)
summary(AZ_mods_sex)
-5.690e-01/1.239e+00
1.239e+00 - 5.690e-01
#plot
A_contribs_vs_descendants <-
ggplot(indiv_contribs_prop_nestlings_2013, aes(x = prop_2013_nestlings, y = auto_mean, color = Sex, fill = Sex)) +
geom_point(alpha = 0.75, size = 0.3)+
geom_smooth(method = "lm", alpha = 0.3, size = 0.5)+
geom_abline(slope = 1, linetype = "dashed", color = "gray") +
scale_color_manual(values = c("cornflowerblue", "indianred1"))+
scale_fill_manual(values = c("cornflowerblue", "indianred1"))+
labs(x = "Genealogical contribution in 2013", y = "Autosomal expected \ngenetic contrib. in 2013")+
plottheme+
theme(legend.position = "none", plot.margin = unit(c(15,5.5,5.5,5.5), "pt")) + ylim(0,0.04)
Z_contribs_vs_descendants <-
ggplot(indiv_contribs_prop_nestlings_2013, aes(x = prop_2013_nestlings, y = Z_mean, color = Sex, fill = Sex)) +
geom_point(alpha = 0.75, size = 0.3)+
geom_smooth(method = "lm", alpha = 0.3, size = 0.5)+
geom_abline(slope = 1,  linetype = "dashed", color = "gray") +
scale_color_manual(values = c("cornflowerblue", "indianred1"))+
scale_fill_manual(values = c("cornflowerblue", "indianred1"))+
labs(x = "Genealogical contribution in 2013", y = "Z expected genetic contrib. in 2013")+
plottheme+
theme(legend.position = "none", plot.margin = unit(c(15,5.5,5.5,5.5), "pt")) + ylim(0,0.04)
A_vs_Z_contribs <-
ggplot(indiv_contribs_A_Z_2013_sex, aes(x = auto_mean, y = Z_mean)) +
geom_abline(slope = 1,  linetype = "dashed", color = "gray", size = 0.5) +
geom_abline(slope = (2/1)*(1/3),  linetype = "dashed", color = "indianred1", size = 0.5) +
geom_abline(slope = (2/1)*(2/3),  linetype = "dashed", color = "cornflowerblue", size = 0.5) +
geom_point(aes(color = Sex), alpha = 0.75, size = 0.3)+
geom_smooth(method = "lm", alpha = 0.3, size = 0.5,color="black")+
geom_smooth(method = "lm", alpha = 0.3, size = 0.5, aes(color = Sex))+
guides(color=FALSE)+
scale_color_manual(values = c("cornflowerblue", "indianred1"))+
scale_fill_manual(values = c("cornflowerblue", "indianred1"))+
labs(x = "Autosomal expected \ngenetic contrib. in 2013", y = "Z expected genetic contrib. in 2013")+
plottheme +
ylim(0,0.04)
plot_grid(A_contribs_vs_descendants, Z_contribs_vs_descendants, A_vs_Z_contribs,  ncol = 3, labels = "AUTO", align = 'hv',axis='tblr')
#plot
#A_contribs_vs_descendants <-
ggplot(indiv_contribs_prop_nestlings_2013, aes(x = prop_2013_nestlings, y = auto_mean, color = Sex, fill = Sex)) +
geom_point(alpha = 0.75, size = 0.3)+
geom_smooth(method = "lm", alpha = 0.3, size = 0.5,formula=y~0+x)+
geom_abline(slope = 1, linetype = "dashed", color = "gray") +
scale_color_manual(values = c("cornflowerblue", "indianred1"))+
scale_fill_manual(values = c("cornflowerblue", "indianred1"))+
labs(x = "Genealogical contribution in 2013", y = "Autosomal expected \ngenetic contrib. in 2013")+
plottheme+
theme(legend.position = "none", plot.margin = unit(c(15,5.5,5.5,5.5), "pt")) + ylim(0,0.04)
#plot
A_contribs_vs_descendants <-
ggplot(indiv_contribs_prop_nestlings_2013, aes(x = prop_2013_nestlings, y = auto_mean, color = Sex, fill = Sex)) +
geom_point(alpha = 0.75, size = 0.3)+
geom_smooth(method = "lm", alpha = 0.3, size = 0.5,formula=y~0+x)+
geom_abline(slope = 1, linetype = "dashed", color = "gray") +
scale_color_manual(values = c("cornflowerblue", "indianred1"))+
scale_fill_manual(values = c("cornflowerblue", "indianred1"))+
labs(x = "Genealogical contribution in 2013", y = "Autosomal expected \ngenetic contrib. in 2013")+
plottheme+
theme(legend.position = "none", plot.margin = unit(c(15,5.5,5.5,5.5), "pt")) + ylim(0,0.04)
Z_contribs_vs_descendants <-
ggplot(indiv_contribs_prop_nestlings_2013, aes(x = prop_2013_nestlings, y = Z_mean, color = Sex, fill = Sex)) +
geom_point(alpha = 0.75, size = 0.3)+
geom_smooth(method = "lm", alpha = 0.3, size = 0.5,formula=y~0+x)+
geom_abline(slope = 1,  linetype = "dashed", color = "gray") +
scale_color_manual(values = c("cornflowerblue", "indianred1"))+
scale_fill_manual(values = c("cornflowerblue", "indianred1"))+
labs(x = "Genealogical contribution in 2013", y = "Z expected genetic contrib. in 2013")+
plottheme+
theme(legend.position = "none", plot.margin = unit(c(15,5.5,5.5,5.5), "pt")) + ylim(0,0.04)
A_vs_Z_contribs <-
ggplot(indiv_contribs_A_Z_2013_sex, aes(x = auto_mean, y = Z_mean)) +
geom_abline(slope = 1,  linetype = "dashed", color = "gray", size = 0.5) +
geom_abline(slope = (2/1)*(1/3),  linetype = "dashed", color = "indianred1", size = 0.5) +
geom_abline(slope = (2/1)*(2/3),  linetype = "dashed", color = "cornflowerblue", size = 0.5) +
geom_point(aes(color = Sex), alpha = 0.75, size = 0.3)+
geom_smooth(method = "lm", alpha = 0.3, size = 0.5,color="black",formula=y~0+x)+
geom_smooth(method = "lm", alpha = 0.3, size = 0.5, aes(color = Sex),formula=y~0+x)+
guides(color=FALSE)+
scale_color_manual(values = c("cornflowerblue", "indianred1"))+
scale_fill_manual(values = c("cornflowerblue", "indianred1"))+
labs(x = "Autosomal expected \ngenetic contrib. in 2013", y = "Z expected genetic contrib. in 2013")+
plottheme +
ylim(0,0.04)
plot_grid(A_contribs_vs_descendants, Z_contribs_vs_descendants, A_vs_Z_contribs,  ncol = 3, labels = "AUTO", align = 'hv',axis='tblr')
